/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_attachment_free: (a: number, b: number) => void;
export const attachment_encrypt: (a: number, b: number) => [number, number, number];
export const attachment_decrypt: (a: number) => [number, number, number, number];
export const __wbg_encryptedattachment_free: (a: number, b: number) => void;
export const encryptedattachment_new: (a: number, b: number, c: number, d: number) => [number, number, number];
export const encryptedattachment_encryptedData: (a: number) => [number, number];
export const encryptedattachment_mediaEncryptionInfo: (a: number) => [number, number];
export const encryptedattachment_hasMediaEncryptionInfoBeenConsumed: (a: number) => number;
export const __wbg_backupdecryptionkey_free: (a: number, b: number) => void;
export const __wbg_megolmv1backupkey_free: (a: number, b: number) => void;
export const megolmv1backupkey_publicKeyBase64: (a: number) => any;
export const megolmv1backupkey_algorithm: (a: number) => any;
export const backupdecryptionkey_createRandomKey: () => number;
export const backupdecryptionkey_fromBase64: (a: number, b: number) => [number, number, number];
export const backupdecryptionkey_toBase64: (a: number) => any;
export const backupdecryptionkey_megolmV1PublicKey: (a: number) => number;
export const backupdecryptionkey_decryptV1: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => [number, number, number, number];
export const __wbg_roomkeycounts_free: (a: number, b: number) => void;
export const __wbg_get_roomkeycounts_total: (a: number) => number;
export const __wbg_set_roomkeycounts_total: (a: number, b: number) => void;
export const __wbg_get_roomkeycounts_backedUp: (a: number) => number;
export const __wbg_set_roomkeycounts_backedUp: (a: number, b: number) => void;
export const __wbg_backupkeys_free: (a: number, b: number) => void;
export const __wbg_get_backupkeys_decryptionKey: (a: number) => number;
export const __wbg_set_backupkeys_decryptionKey: (a: number, b: number) => void;
export const __wbg_get_backupkeys_backupVersion: (a: number) => [number, number];
export const __wbg_set_backupkeys_backupVersion: (a: number, b: number, c: number) => void;
export const backupkeys_decryptionKeyBase64: (a: number) => any;
export const __wbg_dehydrateddevices_free: (a: number, b: number) => void;
export const __wbg_dehydrateddevicekey_free: (a: number, b: number) => void;
export const dehydrateddevicekey_createRandomKey: () => [number, number, number];
export const dehydrateddevicekey_createKeyFromArray: (a: any) => [number, number, number];
export const dehydrateddevicekey_toBase64: (a: number) => any;
export const dehydrateddevices_create: (a: number) => any;
export const dehydrateddevices_rehydrate: (a: number, b: number, c: number, d: number, e: number) => any;
export const dehydrateddevices_getDehydratedDeviceKey: (a: number) => any;
export const dehydrateddevices_saveDehydratedDeviceKey: (a: number, b: number) => any;
export const dehydrateddevices_deleteDehydratedDeviceKey: (a: number) => any;
export const __wbg_rehydrateddevice_free: (a: number, b: number) => void;
export const rehydrateddevice_receiveEvents: (a: number, b: number, c: number, d: number) => any;
export const __wbg_dehydrateddevice_free: (a: number, b: number) => void;
export const dehydrateddevice_keysForUpload: (a: number, b: any, c: number) => any;
export const __wbg_device_free: (a: number, b: number) => void;
export const device_requestVerification: (a: number, b: number, c: number) => [number, number, number];
export const device_encryptToDeviceEvent: (a: number, b: number, c: number, d: any, e: number) => any;
export const device_isVerified: (a: number) => number;
export const device_isCrossSigningTrusted: (a: number) => number;
export const device_isCrossSignedByOwner: (a: number) => number;
export const device_setLocalTrust: (a: number, b: number) => any;
export const device_userId: (a: number) => number;
export const device_deviceId: (a: number) => number;
export const device_displayName: (a: number) => [number, number];
export const device_getKey: (a: number, b: number) => [number, number, number];
export const device_curve25519Key: (a: number) => number;
export const device_ed25519Key: (a: number) => number;
export const device_keys: (a: number) => any;
export const device_algorithms: (a: number) => any;
export const device_signatures: (a: number) => number;
export const device_localTrustState: (a: number) => number;
export const device_isLocallyTrusted: (a: number) => number;
export const device_isBlacklisted: (a: number) => number;
export const device_isDeleted: (a: number) => number;
export const device_firstTimeSeen: (a: number) => bigint;
export const device_verify: (a: number) => any;
export const device_isDehydrated: (a: number) => number;
export const __wbg_userdevices_free: (a: number, b: number) => void;
export const userdevices_get: (a: number, b: number) => number;
export const userdevices_isAnyVerified: (a: number) => number;
export const userdevices_keys: (a: number) => any;
export const userdevices_devices: (a: number) => any;
export const __wbg_encryptionsettings_free: (a: number, b: number) => void;
export const __wbg_get_encryptionsettings_algorithm: (a: number) => number;
export const __wbg_set_encryptionsettings_algorithm: (a: number, b: number) => void;
export const __wbg_get_encryptionsettings_encryptStateEvents: (a: number) => number;
export const __wbg_set_encryptionsettings_encryptStateEvents: (a: number, b: number) => void;
export const __wbg_get_encryptionsettings_rotationPeriod: (a: number) => bigint;
export const __wbg_set_encryptionsettings_rotationPeriod: (a: number, b: bigint) => void;
export const __wbg_get_encryptionsettings_rotationPeriodMessages: (a: number) => bigint;
export const __wbg_set_encryptionsettings_rotationPeriodMessages: (a: number, b: bigint) => void;
export const __wbg_get_encryptionsettings_historyVisibility: (a: number) => number;
export const __wbg_set_encryptionsettings_historyVisibility: (a: number, b: number) => void;
export const __wbg_get_encryptionsettings_sharingStrategy: (a: number) => number;
export const __wbg_set_encryptionsettings_sharingStrategy: (a: number, b: number) => void;
export const encryptionsettings_new: () => number;
export const __wbg_collectstrategy_free: (a: number, b: number) => void;
export const collectstrategy_eq: (a: number, b: number) => number;
export const collectstrategy_deviceBasedStrategy: (a: number, b: number) => number;
export const collectstrategy_allDevices: () => number;
export const collectstrategy_errorOnUnverifiedUserProblem: () => number;
export const collectstrategy_identityBasedStrategy: () => number;
export const collectstrategy_onlyTrustedDevices: () => number;
export const __wbg_decryptionsettings_free: (a: number, b: number) => void;
export const __wbg_get_decryptionsettings_sender_device_trust_requirement: (a: number) => number;
export const __wbg_set_decryptionsettings_sender_device_trust_requirement: (a: number, b: number) => void;
export const decryptionsettings_new: (a: number) => number;
export const __wbg_shieldstate_free: (a: number, b: number) => void;
export const __wbg_get_shieldstate_color: (a: number) => number;
export const __wbg_set_shieldstate_color: (a: number, b: number) => void;
export const __wbg_get_shieldstate_code: (a: number) => number;
export const __wbg_set_shieldstate_code: (a: number, b: number) => void;
export const shieldstate_message: (a: number) => [number, number];
export const __wbg_megolmdecryptionerror_free: (a: number, b: number) => void;
export const __wbg_get_megolmdecryptionerror_code: (a: number) => number;
export const __wbg_get_megolmdecryptionerror_maybe_withheld: (a: number) => any;
export const userid_new: (a: number, b: number) => [number, number, number];
export const userid_localpart: (a: number) => [number, number];
export const userid_serverName: (a: number) => number;
export const userid_isHistorical: (a: number) => number;
export const userid_clone: (a: number) => number;
export const __wbg_deviceid_free: (a: number, b: number) => void;
export const deviceid_new: (a: number, b: number) => number;
export const deviceid_toString: (a: number) => [number, number];
export const __wbg_devicekeyid_free: (a: number, b: number) => void;
export const devicekeyid_new: (a: number, b: number) => [number, number, number];
export const devicekeyid_algorithm: (a: number) => number;
export const devicekeyid_deviceId: (a: number) => number;
export const devicekeyid_toString: (a: number) => [number, number];
export const __wbg_devicekeyalgorithm_free: (a: number, b: number) => void;
export const devicekeyalgorithm_name: (a: number) => number;
export const devicekeyalgorithm_toString: (a: number) => [number, number];
export const roomid_new: (a: number, b: number) => [number, number, number];
export const servername_new: (a: number, b: number) => [number, number, number];
export const servername_host: (a: number) => [number, number];
export const servername_port: (a: number) => number;
export const servername_isIpLiteral: (a: number) => number;
export const eventid_new: (a: number, b: number) => [number, number, number];
export const eventid_localpart: (a: number) => [number, number];
export const eventid_serverName: (a: number) => number;
export const eventid_toString: (a: number) => [number, number];
export const __wbg_ownuseridentity_free: (a: number, b: number) => void;
export const ownuseridentity_isVerified: (a: number) => number;
export const ownuseridentity_verify: (a: number) => any;
export const ownuseridentity_requestVerification: (a: number, b: number, c: number) => [number, number, number];
export const ownuseridentity_trustsOurOwnDevice: (a: number) => any;
export const ownuseridentity_masterKey: (a: number) => [number, number, number, number];
export const ownuseridentity_selfSigningKey: (a: number) => [number, number, number, number];
export const ownuseridentity_userSigningKey: (a: number) => [number, number, number, number];
export const ownuseridentity_wasPreviouslyVerified: (a: number) => number;
export const ownuseridentity_withdrawVerification: (a: number) => any;
export const ownuseridentity_hasVerificationViolation: (a: number) => number;
export const __wbg_otheruseridentity_free: (a: number, b: number) => void;
export const otheruseridentity_isVerified: (a: number) => number;
export const otheruseridentity_verify: (a: number) => any;
export const otheruseridentity_requestVerification: (a: number, b: number, c: number, d: number, e: number) => [number, number, number];
export const otheruseridentity_verificationRequestContent: (a: number, b: number, c: number) => [number, number, number, number];
export const otheruseridentity_masterKey: (a: number) => [number, number, number, number];
export const otheruseridentity_selfSigningKey: (a: number) => [number, number, number, number];
export const otheruseridentity_pinCurrentMasterKey: (a: number) => any;
export const otheruseridentity_identityNeedsUserApproval: (a: number) => number;
export const otheruseridentity_wasPreviouslyVerified: (a: number) => number;
export const otheruseridentity_withdrawVerification: (a: number) => any;
export const otheruseridentity_hasVerificationViolation: (a: number) => number;
export const __wbg_basemigrationdata_free: (a: number, b: number) => void;
export const __wbg_get_basemigrationdata_userId: (a: number) => number;
export const __wbg_set_basemigrationdata_userId: (a: number, b: number) => void;
export const __wbg_get_basemigrationdata_deviceId: (a: number) => number;
export const __wbg_set_basemigrationdata_deviceId: (a: number, b: number) => void;
export const __wbg_get_basemigrationdata_backupVersion: (a: number) => [number, number];
export const __wbg_set_basemigrationdata_backupVersion: (a: number, b: number, c: number) => void;
export const __wbg_get_basemigrationdata_backupRecoveryKey: (a: number) => [number, number];
export const __wbg_set_basemigrationdata_backupRecoveryKey: (a: number, b: number, c: number) => void;
export const __wbg_get_basemigrationdata_privateCrossSigningMasterKey: (a: number) => [number, number];
export const __wbg_set_basemigrationdata_privateCrossSigningMasterKey: (a: number, b: number, c: number) => void;
export const __wbg_get_basemigrationdata_privateCrossSigningSelfSigningKey: (a: number) => [number, number];
export const __wbg_set_basemigrationdata_privateCrossSigningSelfSigningKey: (a: number, b: number, c: number) => void;
export const __wbg_get_basemigrationdata_privateCrossSigningUserSigningKey: (a: number) => [number, number];
export const __wbg_set_basemigrationdata_privateCrossSigningUserSigningKey: (a: number, b: number, c: number) => void;
export const basemigrationdata_new: () => number;
export const migration_migrateBaseData: (a: number, b: any, c: number, d: number) => any;
export const __wbg_pickledsession_free: (a: number, b: number) => void;
export const __wbg_get_pickledsession_createdUsingFallbackKey: (a: number) => number;
export const __wbg_set_pickledsession_createdUsingFallbackKey: (a: number, b: number) => void;
export const __wbg_get_pickledsession_creationTime: (a: number) => any;
export const __wbg_set_pickledsession_creationTime: (a: number, b: any) => void;
export const __wbg_get_pickledsession_lastUseTime: (a: number) => any;
export const __wbg_set_pickledsession_lastUseTime: (a: number, b: any) => void;
export const pickledsession_new: () => number;
export const migration_migrateOlmSessions: (a: number, b: number, c: any, d: number, e: number) => [number, number, number];
export const __wbg_pickledinboundgroupsession_free: (a: number, b: number) => void;
export const __wbg_get_pickledinboundgroupsession_roomId: (a: number) => number;
export const __wbg_set_pickledinboundgroupsession_roomId: (a: number, b: number) => void;
export const __wbg_get_pickledinboundgroupsession_imported: (a: number) => number;
export const __wbg_set_pickledinboundgroupsession_imported: (a: number, b: number) => void;
export const __wbg_get_pickledinboundgroupsession_backedUp: (a: number) => number;
export const __wbg_set_pickledinboundgroupsession_backedUp: (a: number, b: number) => void;
export const pickledinboundgroupsession_new: () => number;
export const migration_migrateMegolmSessions: (a: number, b: number, c: any, d: number, e: number) => [number, number, number];
export const __wbg_olmmachine_free: (a: number, b: number) => void;
export const olmmachine_new: () => [number, number, number];
export const olmmachine_initialize: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => any;
export const olmmachine_initFromStore: (a: number, b: number, c: number, d: number) => any;
export const olmmachine_userId: (a: number) => number;
export const olmmachine_deviceId: (a: number) => number;
export const olmmachine_deviceCreationTimeMs: (a: number) => number;
export const olmmachine_identityKeys: (a: number) => number;
export const olmmachine_displayName: (a: number) => any;
export const olmmachine_roomKeyRequestsEnabled: (a: number) => number;
export const olmmachine_set_roomKeyRequestsEnabled: (a: number, b: number) => void;
export const olmmachine_roomKeyForwardingEnabled: (a: number) => number;
export const olmmachine_set_roomKeyForwardingEnabled: (a: number, b: number) => void;
export const olmmachine_trackedUsers: (a: number) => [number, number, number];
export const olmmachine_updateTrackedUsers: (a: number, b: number, c: number) => any;
export const olmmachine_markAllTrackedUsersAsDirty: (a: number) => any;
export const olmmachine_receiveSyncChanges: (a: number, b: number, c: number, d: number, e: any, f: number, g: number) => [number, number, number];
export const olmmachine_outgoingRequests: (a: number) => any;
export const olmmachine_markRequestAsSent: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number, number];
export const olmmachine_encryptRoomEvent: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number, number];
export const olmmachine_encryptStateEvent: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => [number, number, number];
export const olmmachine_decryptRoomEvent: (a: number, b: number, c: number, d: number, e: number) => [number, number, number];
export const olmmachine_getRoomEventEncryptionInfo: (a: number, b: number, c: number, d: number) => [number, number, number];
export const olmmachine_crossSigningStatus: (a: number) => any;
export const olmmachine_exportSecretsBundle: (a: number) => any;
export const olmmachine_importSecretsBundle: (a: number, b: number) => any;
export const olmmachine_exportCrossSigningKeys: (a: number) => any;
export const olmmachine_importCrossSigningKeys: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => any;
export const olmmachine_bootstrapCrossSigning: (a: number, b: number) => any;
export const olmmachine_getIdentity: (a: number, b: number) => any;
export const olmmachine_sign: (a: number, b: number, c: number) => any;
export const olmmachine_invalidateGroupSession: (a: number, b: number) => any;
export const olmmachine_shareRoomKey: (a: number, b: number, c: number, d: number, e: number) => any;
export const olmmachine_queryKeysForUsers: (a: number, b: number, c: number) => [number, number, number];
export const olmmachine_getMissingSessions: (a: number, b: number, c: number) => any;
export const olmmachine_getUserDevices: (a: number, b: number, c: number, d: number) => any;
export const olmmachine_getDevice: (a: number, b: number, c: number, d: number, e: number) => any;
export const olmmachine_getVerification: (a: number, b: number, c: number, d: number) => [number, number, number];
export const olmmachine_getVerificationRequest: (a: number, b: number, c: number, d: number) => number;
export const olmmachine_getVerificationRequests: (a: number, b: number) => any;
export const olmmachine_receiveVerificationEvent: (a: number, b: number, c: number, d: number) => [number, number, number];
export const olmmachine_exportRoomKeys: (a: number, b: any) => any;
export const olmmachine_importRoomKeys: (a: number, b: number, c: number, d: any) => [number, number, number];
export const olmmachine_importExportedRoomKeys: (a: number, b: number, c: number, d: any) => [number, number, number];
export const olmmachine_importBackedUpRoomKeys: (a: number, b: any, c: number, d: number, e: number) => [number, number, number];
export const olmmachine_saveBackupDecryptionKey: (a: number, b: number, c: number, d: number) => any;
export const olmmachine_getBackupKeys: (a: number) => any;
export const olmmachine_verifyBackup: (a: number, b: any) => [number, number, number];
export const olmmachine_enableBackupV1: (a: number, b: number, c: number, d: number, e: number) => [number, number, number];
export const olmmachine_isBackupEnabled: (a: number) => any;
export const olmmachine_disableBackup: (a: number) => any;
export const olmmachine_backupRoomKeys: (a: number) => any;
export const olmmachine_roomKeyCounts: (a: number) => any;
export const olmmachine_encryptExportedRoomKeys: (a: number, b: number, c: number, d: number, e: number) => [number, number, number, number];
export const olmmachine_decryptExportedRoomKeys: (a: number, b: number, c: number, d: number) => [number, number, number, number];
export const olmmachine_registerRoomKeyUpdatedCallback: (a: number, b: any) => void;
export const olmmachine_registerRoomKeysWithheldCallback: (a: number, b: any) => void;
export const olmmachine_registerUserIdentityUpdatedCallback: (a: number, b: any) => void;
export const olmmachine_registerDevicesUpdatedCallback: (a: number, b: any) => void;
export const olmmachine_registerReceiveSecretCallback: (a: number, b: any) => void;
export const olmmachine_getSecretsFromInbox: (a: number, b: number, c: number) => any;
export const olmmachine_deleteSecretsFromInbox: (a: number, b: number, c: number) => any;
export const olmmachine_requestMissingSecretsIfNeeded: (a: number) => any;
export const olmmachine_getRoomSettings: (a: number, b: number) => any;
export const olmmachine_setRoomSettings: (a: number, b: number, c: number) => any;
export const olmmachine_dehydratedDevices: (a: number) => number;
export const olmmachine_buildRoomKeyBundle: (a: number, b: number) => any;
export const olmmachine_shareRoomKeyBundleData: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => [number, number, number];
export const olmmachine_getReceivedRoomKeyBundleData: (a: number, b: number, c: number) => any;
export const olmmachine_receiveRoomKeyBundle: (a: number, b: number, c: number, d: number) => [number, number, number];
export const olmmachine_close: (a: number) => void;
export const crosssigningstatus_hasMaster: (a: number) => number;
export const crosssigningstatus_hasSelfSigning: (a: number) => number;
export const crosssigningstatus_hasUserSigning: (a: number) => number;
export const __wbg_inboundgroupsession_free: (a: number, b: number) => void;
export const inboundgroupsession_roomId: (a: number) => number;
export const inboundgroupsession_senderKey: (a: number) => number;
export const inboundgroupsession_sessionId: (a: number) => [number, number];
export const inboundgroupsession_hasBeenImported: (a: number) => number;
export const __wbg_qrcodedata_free: (a: number, b: number) => void;
export const qrcodedata_new: (a: number, b: number, c: number, d: number, e: number) => [number, number, number];
export const qrcodedata_fromBytes: (a: number, b: number) => [number, number, number];
export const qrcodedata_toBytes: (a: number) => [number, number];
export const qrcodedata_fromBase64: (a: number, b: number) => [number, number, number];
export const qrcodedata_toBase64: (a: number) => [number, number];
export const qrcodedata_publicKey: (a: number) => number;
export const qrcodedata_rendezvousUrl: (a: number) => [number, number];
export const qrcodedata_serverName: (a: number) => [number, number];
export const qrcodedata_mode: (a: number) => number;
export const keysuploadrequest_type: (a: number) => number;
export const keysqueryrequest_type: (a: number) => number;
export const __wbg_keysclaimrequest_free: (a: number, b: number) => void;
export const keysclaimrequest_new: (a: any, b: any) => number;
export const keysclaimrequest_type: (a: number) => number;
export const __wbg_todevicerequest_free: (a: number, b: number) => void;
export const todevicerequest_new: (a: any, b: any, c: any, d: any) => number;
export const todevicerequest_type: (a: number) => number;
export const __wbg_signatureuploadrequest_free: (a: number, b: number) => void;
export const signatureuploadrequest_new: (a: any, b: any) => number;
export const signatureuploadrequest_type: (a: number) => number;
export const __wbg_roommessagerequest_free: (a: number, b: number) => void;
export const __wbg_get_roommessagerequest_body: (a: number) => any;
export const roommessagerequest_new: (a: any, b: any, c: any, d: any, e: any) => number;
export const roommessagerequest_type: (a: number) => number;
export const __wbg_keysbackuprequest_free: (a: number, b: number) => void;
export const __wbg_get_keysbackuprequest_body: (a: number) => any;
export const __wbg_get_keysbackuprequest_version: (a: number) => any;
export const keysbackuprequest_new: (a: any, b: any, c: any) => number;
export const keysbackuprequest_type: (a: number) => number;
export const __wbg_putdehydrateddevicerequest_free: (a: number, b: number) => void;
export const __wbg_get_putdehydrateddevicerequest_body: (a: number) => any;
export const putdehydrateddevicerequest_new: (a: any) => number;
export const __wbg_crosssigningbootstraprequests_free: (a: number, b: number) => void;
export const __wbg_get_crosssigningbootstraprequests_uploadKeysRequest: (a: number) => any;
export const __wbg_get_crosssigningbootstraprequests_uploadSigningKeysRequest: (a: number) => number;
export const __wbg_get_crosssigningbootstraprequests_uploadSignaturesRequest: (a: number) => number;
export const __wbg_decryptedroomevent_free: (a: number, b: number) => void;
export const __wbg_get_decryptedroomevent_event: (a: number) => any;
export const decryptedroomevent_sender: (a: number) => number;
export const decryptedroomevent_senderDevice: (a: number) => number;
export const decryptedroomevent_senderCurve25519Key: (a: number) => [number, number];
export const decryptedroomevent_senderClaimedEd25519Key: (a: number) => any;
export const decryptedroomevent_forwardingCurve25519KeyChain: (a: number) => any;
export const decryptedroomevent_shieldState: (a: number, b: number) => number;
export const __wbg_encryptioninfo_free: (a: number, b: number) => void;
export const __wbg_get_encryptioninfo_sender: (a: number) => number;
export const __wbg_set_encryptioninfo_sender: (a: number, b: number) => void;
export const __wbg_get_encryptioninfo_senderDevice: (a: number) => number;
export const __wbg_set_encryptioninfo_senderDevice: (a: number, b: number) => void;
export const encryptioninfo_shieldState: (a: number, b: number) => number;
export const __wbg_todeviceencryptioninfo_free: (a: number, b: number) => void;
export const __wbg_get_todeviceencryptioninfo_sender: (a: number) => number;
export const __wbg_set_todeviceencryptioninfo_sender: (a: number, b: number) => void;
export const __wbg_get_todeviceencryptioninfo_senderDevice: (a: number) => number;
export const __wbg_set_todeviceencryptioninfo_senderDevice: (a: number, b: number) => void;
export const todeviceencryptioninfo_isSenderVerified: (a: number) => number;
export const __wbg_storehandle_free: (a: number, b: number) => void;
export const storehandle_open: (a: number, b: number, c: number, d: number, e: number) => any;
export const storehandle_openWithKey: (a: number, b: number, c: number, d: number, e: number) => any;
export const __wbg_crosssigningkeyexport_free: (a: number, b: number) => void;
export const crosssigningkeyexport_masterKey: (a: number) => [number, number];
export const crosssigningkeyexport_self_signing_key: (a: number) => [number, number];
export const crosssigningkeyexport_userSigningKey: (a: number) => [number, number];
export const __wbg_roomkeyinfo_free: (a: number, b: number) => void;
export const roomkeyinfo_algorithm: (a: number) => number;
export const roomkeyinfo_roomId: (a: number) => number;
export const roomkeyinfo_senderKey: (a: number) => number;
export const roomkeyinfo_sessionId: (a: number) => [number, number];
export const __wbg_roomkeywithheldinfo_free: (a: number, b: number) => void;
export const roomkeywithheldinfo_sender: (a: number) => number;
export const roomkeywithheldinfo_algorithm: (a: number) => number;
export const roomkeywithheldinfo_withheldCode: (a: number) => [number, number];
export const roomkeywithheldinfo_roomId: (a: number) => number;
export const roomkeywithheldinfo_sessionId: (a: number) => [number, number];
export const __wbg_secretsbundle_free: (a: number, b: number) => void;
export const __wbg_backupsecretsbundle_free: (a: number, b: number) => void;
export const __wbg_get_backupsecretsbundle_key: (a: number) => [number, number];
export const __wbg_set_backupsecretsbundle_key: (a: number, b: number, c: number) => void;
export const __wbg_get_backupsecretsbundle_backup_version: (a: number) => [number, number];
export const __wbg_set_backupsecretsbundle_backup_version: (a: number, b: number, c: number) => void;
export const secretsbundle_masterKey: (a: number) => [number, number];
export const secretsbundle_selfSigningKey: (a: number) => [number, number];
export const secretsbundle_userSigningKey: (a: number) => [number, number];
export const secretsbundle_backupBundle: (a: number) => number;
export const secretsbundle_to_json: (a: number) => [number, number, number];
export const secretsbundle_from_json: (a: any) => [number, number, number];
export const __wbg_devicelists_free: (a: number, b: number) => void;
export const devicelists_new: (a: number, b: number, c: number, d: number) => [number, number, number];
export const devicelists_isEmpty: (a: number) => number;
export const devicelists_changed: (a: number) => [number, number];
export const devicelists_left: (a: number) => [number, number];
export const __wbg_tracing_free: (a: number, b: number) => void;
export const tracing_isAvailable: () => number;
export const tracing_new: (a: number) => [number, number, number];
export const tracing_set_minLevel: (a: number, b: number) => [number, number];
export const tracing_turnOn: (a: number) => [number, number];
export const tracing_turnOff: (a: number) => [number, number];
export const __wbg_signatures_free: (a: number, b: number) => void;
export const signatures_new: () => number;
export const signatures_addSignature: (a: number, b: number, c: number, d: number) => number;
export const signatures_getSignature: (a: number, b: number, c: number) => number;
export const signatures_get: (a: number, b: number) => any;
export const signatures_clear: (a: number) => void;
export const signatures_isEmpty: (a: number) => number;
export const signatures_count: (a: number) => number;
export const signatures_asJSON: (a: number) => [number, number, number];
export const __wbg_signature_free: (a: number, b: number) => void;
export const signature_ed25519: (a: number) => number;
export const signature_toBase64: (a: number) => [number, number];
export const __wbg_maybesignature_free: (a: number, b: number) => void;
export const maybesignature_isValid: (a: number) => number;
export const maybesignature_isInvalid: (a: number) => number;
export const maybesignature_signature: (a: number) => number;
export const maybesignature_invalidSignatureSource: (a: number) => [number, number];
export const __wbg_signatureverification_free: (a: number, b: number) => void;
export const signatureverification_deviceState: (a: number) => number;
export const signatureverification_userState: (a: number) => number;
export const signatureverification_trusted: (a: number) => number;
export const __wbg_roomkeyimportresult_free: (a: number, b: number) => void;
export const __wbg_get_roomkeyimportresult_importedCount: (a: number) => number;
export const __wbg_get_roomkeyimportresult_totalCount: (a: number) => number;
export const roomkeyimportresult_keys: (a: number) => any;
export const __wbg_roomsettings_free: (a: number, b: number) => void;
export const __wbg_get_roomsettings_algorithm: (a: number) => number;
export const __wbg_set_roomsettings_algorithm: (a: number, b: number) => void;
export const __wbg_get_roomsettings_encryptStateEvents: (a: number) => number;
export const __wbg_set_roomsettings_encryptStateEvents: (a: number, b: number) => void;
export const __wbg_get_roomsettings_onlyAllowTrustedDevices: (a: number) => number;
export const __wbg_set_roomsettings_onlyAllowTrustedDevices: (a: number, b: number) => void;
export const __wbg_get_roomsettings_sessionRotationPeriodMs: (a: number) => [number, number];
export const __wbg_set_roomsettings_sessionRotationPeriodMs: (a: number, b: number, c: number) => void;
export const __wbg_get_roomsettings_sessionRotationPeriodMessages: (a: number) => [number, number];
export const __wbg_set_roomsettings_sessionRotationPeriodMessages: (a: number, b: number, c: number) => void;
export const roomsettings_new: () => number;
export const __wbg_decryptedtodeviceevent_free: (a: number, b: number) => void;
export const __wbg_get_decryptedtodeviceevent_rawEvent: (a: number) => any;
export const __wbg_get_decryptedtodeviceevent_encryptionInfo: (a: number) => number;
export const decryptedtodeviceevent_type: (a: number) => number;
export const plaintexttodeviceevent_type: (a: number) => number;
export const __wbg_todeviceunabletodecryptinfo_free: (a: number, b: number) => void;
export const __wbg_get_todeviceunabletodecryptinfo_reason: (a: number) => number;
export const __wbg_set_todeviceunabletodecryptinfo_reason: (a: number, b: number) => void;
export const __wbg_utdtodeviceevent_free: (a: number, b: number) => void;
export const __wbg_get_utdtodeviceevent_utdInfo: (a: number) => number;
export const utdtodeviceevent_type: (a: number) => number;
export const __wbg_invalidtodeviceevent_free: (a: number, b: number) => void;
export const __wbg_get_invalidtodeviceevent_rawEvent: (a: number) => any;
export const invalidtodeviceevent_type: (a: number) => number;
export const __wbg_storedroomkeybundledata_free: (a: number, b: number) => void;
export const storedroomkeybundledata_senderUser: (a: number) => number;
export const storedroomkeybundledata_roomId: (a: number) => number;
export const storedroomkeybundledata_url: (a: number) => [number, number];
export const storedroomkeybundledata_encryptionInfo: (a: number) => [number, number];
export const __wbg_sas_free: (a: number, b: number) => void;
export const sas_userId: (a: number) => number;
export const sas_deviceId: (a: number) => number;
export const sas_otherUserId: (a: number) => number;
export const sas_otherDeviceId: (a: number) => number;
export const sas_flowId: (a: number) => [number, number];
export const sas_roomId: (a: number) => number;
export const sas_supportsEmoji: (a: number) => number;
export const sas_startedFromRequest: (a: number) => number;
export const sas_isSelfVerification: (a: number) => number;
export const sas_haveWeConfirmed: (a: number) => number;
export const sas_hasBeenAccepted: (a: number) => number;
export const sas_cancelInfo: (a: number) => number;
export const sas_weStarted: (a: number) => number;
export const sas_accept: (a: number) => [number, number, number];
export const sas_confirm: (a: number) => any;
export const sas_cancel: (a: number) => [number, number, number];
export const sas_cancelWithCode: (a: number, b: number, c: number) => [number, number, number];
export const sas_timedOut: (a: number) => number;
export const sas_canBePresented: (a: number) => number;
export const sas_isDone: (a: number) => number;
export const sas_isCancelled: (a: number) => number;
export const sas_emoji: (a: number) => [number, number];
export const sas_emojiIndex: (a: number) => [number, number];
export const sas_decimals: (a: number) => [number, number];
export const sas_registerChangesCallback: (a: number, b: any) => void;
export const __wbg_qr_free: (a: number, b: number) => void;
export const qr_state: (a: number) => number;
export const qr_hasBeenScanned: (a: number) => number;
export const qr_hasBeenConfirmed: (a: number) => number;
export const qr_userId: (a: number) => number;
export const qr_otherUserId: (a: number) => number;
export const qr_otherDeviceId: (a: number) => number;
export const qr_weStarted: (a: number) => number;
export const qr_cancelInfo: (a: number) => number;
export const qr_isDone: (a: number) => number;
export const qr_isCancelled: (a: number) => number;
export const qr_isSelfVerification: (a: number) => number;
export const qr_reciprocated: (a: number) => number;
export const qr_flowId: (a: number) => [number, number];
export const qr_roomId: (a: number) => number;
export const qr_toQrCode: (a: number) => [number, number, number];
export const qr_toBytes: (a: number) => [number, number, number];
export const qr_reciprocate: (a: number) => [number, number, number];
export const qr_confirmScanning: (a: number) => [number, number, number];
export const qr_cancel: (a: number) => [number, number, number];
export const qr_cancelWithCode: (a: number, b: number, c: number) => [number, number, number];
export const qr_registerChangesCallback: (a: number, b: any) => void;
export const __wbg_cancelinfo_free: (a: number, b: number) => void;
export const cancelinfo_reason: (a: number) => any;
export const cancelinfo_cancelCode: (a: number) => [number, number];
export const cancelinfo_cancelledbyUs: (a: number) => number;
export const __wbg_emoji_free: (a: number, b: number) => void;
export const emoji_symbol: (a: number) => any;
export const emoji_description: (a: number) => any;
export const __wbg_qrcode_free: (a: number, b: number) => void;
export const qrcode_renderIntoBuffer: (a: number) => [number, number, number];
export const __wbg_qrcodescan_free: (a: number, b: number) => void;
export const qrcodescan_fromBytes: (a: any) => [number, number, number];
export const __wbg_verificationrequest_free: (a: number, b: number) => void;
export const verificationrequest_request: (a: number, b: number, c: number, d: number, e: number) => [number, number, number, number];
export const verificationrequest_ownUserId: (a: number) => number;
export const verificationrequest_otherUserId: (a: number) => number;
export const verificationrequest_otherDeviceId: (a: number) => number;
export const verificationrequest_roomId: (a: number) => number;
export const verificationrequest_cancelInfo: (a: number) => number;
export const verificationrequest_isPassive: (a: number) => number;
export const verificationrequest_isReady: (a: number) => number;
export const verificationrequest_timedOut: (a: number) => number;
export const verificationrequest_timeRemainingMillis: (a: number) => number;
export const verificationrequest_theirSupportedMethods: (a: number) => [number, number, number, number];
export const verificationrequest_ourSupportedMethods: (a: number) => [number, number, number, number];
export const verificationrequest_flowId: (a: number) => [number, number];
export const verificationrequest_isSelfVerification: (a: number) => number;
export const verificationrequest_weStarted: (a: number) => number;
export const verificationrequest_isDone: (a: number) => number;
export const verificationrequest_phase: (a: number) => number;
export const verificationrequest_getVerification: (a: number) => any;
export const verificationrequest_registerChangesCallback: (a: number, b: any) => void;
export const verificationrequest_isCancelled: (a: number) => number;
export const verificationrequest_acceptWithMethods: (a: number, b: number, c: number) => [number, number, number];
export const verificationrequest_accept: (a: number) => [number, number, number];
export const verificationrequest_cancel: (a: number) => [number, number, number];
export const verificationrequest_startSas: (a: number) => any;
export const verificationrequest_generateQrCode: (a: number) => any;
export const verificationrequest_scanQrCode: (a: number, b: number) => any;
export const __wbg_inboundcreationresult_free: (a: number, b: number) => void;
export const __wbg_get_inboundcreationresult_channel: (a: number) => number;
export const __wbg_set_inboundcreationresult_channel: (a: number, b: number) => void;
export const __wbg_ecies_free: (a: number, b: number) => void;
export const ecies_new: () => number;
export const ecies_public_key: (a: number) => number;
export const ecies_establish_inbound_channel: (a: number, b: number, c: number) => [number, number, number];
export const ecies_establish_outbound_channel: (a: number, b: number, c: number, d: number) => [number, number, number];
export const __wbg_establishedecies_free: (a: number, b: number) => void;
export const establishedecies_public_key: (a: number) => number;
export const establishedecies_encrypt: (a: number, b: number, c: number) => [number, number];
export const establishedecies_decrypt: (a: number, b: number, c: number) => [number, number, number, number];
export const establishedecies_check_code: (a: number) => number;
export const __wbg_checkcode_free: (a: number, b: number) => void;
export const checkcode_as_bytes: (a: number) => [number, number];
export const checkcode_to_digit: (a: number) => number;
export const __wbg_pkmessage_free: (a: number, b: number) => void;
export const pkmessage_ciphertext: (a: number) => [number, number];
export const pkmessage_mac: (a: number) => [number, number];
export const pkmessage_ephemeralKey: (a: number) => number;
export const pkmessage_fromParts: (a: number, b: number, c: number, d: number, e: number) => number;
export const pkmessage_fromBase64: (a: number) => [number, number, number];
export const pkmessage_toBase64: (a: number) => number;
export const __wbg_base64encodedpkmessage_free: (a: number, b: number) => void;
export const __wbg_get_base64encodedpkmessage_ephemeralKey: (a: number) => [number, number];
export const __wbg_set_base64encodedpkmessage_ephemeralKey: (a: number, b: number, c: number) => void;
export const base64encodedpkmessage_new: (a: number, b: number, c: number, d: number, e: number, f: number) => number;
export const __wbg_pkencryption_free: (a: number, b: number) => void;
export const pkencryption_fromKey: (a: number) => number;
export const pkencryption_encrypt: (a: number, b: number, c: number) => number;
export const __wbg_pkdecryption_free: (a: number, b: number) => void;
export const pkdecryption_new: () => number;
export const pkdecryption_fromKey: (a: number) => number;
export const pkdecryption_secretKey: (a: number) => number;
export const pkdecryption_publicKey: (a: number) => number;
export const pkdecryption_decryptString: (a: number, b: number) => [number, number, number, number];
export const pkdecryption_decrypt: (a: number, b: number) => [number, number, number, number];
export const __wbg_ed25519publickey_free: (a: number, b: number) => void;
export const ed25519publickey_length: (a: number) => number;
export const ed25519publickey_toBase64: (a: number) => [number, number];
export const __wbg_ed25519signature_free: (a: number, b: number) => void;
export const ed25519signature_new: (a: number, b: number) => [number, number, number];
export const ed25519signature_toBase64: (a: number) => [number, number];
export const __wbg_curve25519publickey_free: (a: number, b: number) => void;
export const curve25519publickey_new: (a: number, b: number) => [number, number, number];
export const curve25519publickey_length: (a: number) => number;
export const curve25519publickey_toBase64: (a: number) => [number, number];
export const __wbg_curve25519secretkey_free: (a: number, b: number) => void;
export const curve25519secretkey_new: () => number;
export const curve25519secretkey_fromBase64: (a: number, b: number) => [number, number, number];
export const curve25519secretkey_toBase64: (a: number) => [number, number];
export const curve25519secretkey_toUint8Array: (a: number) => [number, number];
export const curve25519secretkey_fromUint8Array: (a: number, b: number) => [number, number, number];
export const __wbg_identitykeys_free: (a: number, b: number) => void;
export const __wbg_get_identitykeys_ed25519: (a: number) => number;
export const __wbg_set_identitykeys_ed25519: (a: number, b: number) => void;
export const __wbg_get_identitykeys_curve25519: (a: number) => number;
export const __wbg_set_identitykeys_curve25519: (a: number, b: number) => void;
export const __wbg_devicekey_free: (a: number, b: number) => void;
export const devicekey_name: (a: number) => number;
export const devicekey_curve25519: (a: number) => number;
export const devicekey_ed25519: (a: number) => number;
export const devicekey_unknown: (a: number) => [number, number];
export const devicekey_toBase64: (a: number) => [number, number];
export const __wbg_versions_free: (a: number, b: number) => void;
export const getVersions: () => number;
export const start: () => void;
export const __wbg_uploadsigningkeysrequest_free: (a: number, b: number) => void;
export const pkencryption_encryptString: (a: number, b: number, c: number) => number;
export const uploadsigningkeysrequest_new: (a: any) => number;
export const __wbg_set_pickledsession_senderKey: (a: number, b: number, c: number) => void;
export const __wbg_set_pickledinboundgroupsession_senderSigningKey: (a: number, b: number, c: number) => void;
export const __wbg_set_encryptioninfo_senderClaimedEd25519Key: (a: number, b: number, c: number) => void;
export const __wbg_set_pickledinboundgroupsession_senderKey: (a: number, b: number, c: number) => void;
export const __wbg_set_base64encodedpkmessage_mac: (a: number, b: number, c: number) => void;
export const __wbg_keysuploadrequest_free: (a: number, b: number) => void;
export const __wbg_keysqueryrequest_free: (a: number, b: number) => void;
export const __wbg_set_pickledsession_pickle: (a: number, b: number, c: number) => void;
export const __wbg_set_pickledinboundgroupsession_pickle: (a: number, b: number, c: number) => void;
export const __wbg_set_encryptioninfo_senderCurve25519Key: (a: number, b: number, c: number) => void;
export const __wbg_set_todeviceencryptioninfo_senderCurve25519Key: (a: number, b: number, c: number) => void;
export const __wbg_set_basemigrationdata_pickledAccount: (a: number, b: number, c: number) => void;
export const __wbg_set_inboundcreationresult_message: (a: number, b: number, c: number) => void;
export const __wbg_set_outboundcreationresult_initial_message: (a: number, b: number, c: number) => void;
export const __wbg_set_base64encodedpkmessage_ciphertext: (a: number, b: number, c: number) => void;
export const __wbg_get_keysuploadrequest_id: (a: number) => any;
export const __wbg_get_keysqueryrequest_id: (a: number) => any;
export const __wbg_get_todevicerequest_id: (a: number) => any;
export const __wbg_get_roommessagerequest_id: (a: number) => any;
export const __wbg_get_keysclaimrequest_id: (a: number) => any;
export const __wbg_get_plaintexttodeviceevent_rawEvent: (a: number) => any;
export const __wbg_get_utdtodeviceevent_rawEvent: (a: number) => any;
export const __wbg_get_keysbackuprequest_id: (a: number) => any;
export const __wbg_get_versions_vodozemac: (a: number) => any;
export const __wbg_plaintexttodeviceevent_free: (a: number, b: number) => void;
export const __wbg_servername_free: (a: number, b: number) => void;
export const __wbg_migration_free: (a: number, b: number) => void;
export const __wbg_get_encryptioninfo_senderClaimedEd25519Key: (a: number) => [number, number];
export const __wbg_get_uploadsigningkeysrequest_body: (a: number) => any;
export const __wbg_eventid_free: (a: number, b: number) => void;
export const __wbg_get_pickledinboundgroupsession_senderSigningKey: (a: number) => [number, number];
export const __wbg_get_signatureuploadrequest_id: (a: number) => any;
export const __wbg_set_outboundcreationresult_channel: (a: number, b: number) => void;
export const __wbg_crosssigningstatus_free: (a: number, b: number) => void;
export const __wbg_get_outboundcreationresult_channel: (a: number) => number;
export const __wbg_get_megolmdecryptionerror_description: (a: number) => any;
export const __wbg_get_keysclaimrequest_body: (a: number) => any;
export const __wbg_get_roommessagerequest_txn_id: (a: number) => any;
export const __wbg_get_roommessagerequest_room_id: (a: number) => any;
export const __wbg_get_todevicerequest_body: (a: number) => any;
export const __wbg_get_todevicerequest_txn_id: (a: number) => any;
export const __wbg_get_todevicerequest_event_type: (a: number) => any;
export const __wbg_get_keysuploadrequest_body: (a: number) => any;
export const __wbg_get_versions_git_description: (a: number) => any;
export const __wbg_get_versions_git_sha: (a: number) => any;
export const __wbg_get_versions_matrix_sdk_crypto: (a: number) => any;
export const __wbg_get_keysqueryrequest_body: (a: number) => any;
export const __wbg_get_signatureuploadrequest_body: (a: number) => any;
export const keysuploadrequest_new: (a: any, b: any) => number;
export const keysqueryrequest_new: (a: any, b: any) => number;
export const __wbg_roomid_free: (a: number, b: number) => void;
export const __wbg_userid_free: (a: number, b: number) => void;
export const __wbg_outboundcreationresult_free: (a: number, b: number) => void;
export const userid_toString: (a: number) => [number, number];
export const roomid_toString: (a: number) => [number, number];
export const __wbg_get_roommessagerequest_event_type: (a: number) => any;
export const __wbg_get_pickledsession_pickle: (a: number) => [number, number];
export const __wbg_get_pickledinboundgroupsession_pickle: (a: number) => [number, number];
export const __wbg_get_pickledsession_senderKey: (a: number) => [number, number];
export const __wbg_get_encryptioninfo_senderCurve25519Key: (a: number) => [number, number];
export const __wbg_get_todeviceencryptioninfo_senderCurve25519Key: (a: number) => [number, number];
export const __wbg_get_basemigrationdata_pickledAccount: (a: number) => [number, number];
export const __wbg_get_pickledinboundgroupsession_senderKey: (a: number) => [number, number];
export const __wbg_get_inboundcreationresult_message: (a: number) => [number, number];
export const __wbg_get_outboundcreationresult_initial_message: (a: number) => [number, number];
export const __wbg_get_base64encodedpkmessage_ciphertext: (a: number) => [number, number];
export const __wbg_get_base64encodedpkmessage_mac: (a: number) => [number, number];
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_export_6: WebAssembly.Table;
export const __externref_table_dealloc: (a: number) => void;
export const __externref_drop_slice: (a: number, b: number) => void;
export const closure41_externref_shim_multivalue_shim: (a: number, b: number, c: any) => [number, number];
export const wasm_bindgen__convert__closures_____invoke__h8861d869601ff522: (a: number, b: number) => void;
export const closure756_externref_shim: (a: number, b: number, c: any) => void;
export const closure438_externref_shim: (a: number, b: number, c: any) => void;
export const wasm_bindgen__convert__closures_____invoke__hce61fd14ea1a6ce1: (a: number, b: number) => void;
export const closure451_externref_shim: (a: number, b: number, c: any, d: any) => void;
export const __wbindgen_start: () => void;

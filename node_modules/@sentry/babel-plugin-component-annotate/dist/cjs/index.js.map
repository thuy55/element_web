{"version":3,"file":"index.js","sources":["../../src/constants.ts","../../src/index.ts"],"sourcesContent":["/**\n * MIT License\n *\n * Copyright (c) 2020 Engineering at FullStory\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\n\nexport const KNOWN_INCOMPATIBLE_PLUGINS = [\n  // This module might be causing an issue preventing clicks. For safety, we won't run on this module.\n  \"react-native-testfairy\",\n  // This module checks for unexpected property keys and throws an exception.\n  \"@react-navigation\",\n];\n\nexport const DEFAULT_IGNORED_ELEMENTS = [\n  \"a\",\n  \"abbr\",\n  \"address\",\n  \"area\",\n  \"article\",\n  \"aside\",\n  \"audio\",\n  \"b\",\n  \"base\",\n  \"bdi\",\n  \"bdo\",\n  \"blockquote\",\n  \"body\",\n  \"br\",\n  \"button\",\n  \"canvas\",\n  \"caption\",\n  \"cite\",\n  \"code\",\n  \"col\",\n  \"colgroup\",\n  \"data\",\n  \"datalist\",\n  \"dd\",\n  \"del\",\n  \"details\",\n  \"dfn\",\n  \"dialog\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"em\",\n  \"embed\",\n  \"fieldset\",\n  \"figure\",\n  \"footer\",\n  \"form\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"head\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"html\",\n  \"i\",\n  \"iframe\",\n  \"img\",\n  \"input\",\n  \"ins\",\n  \"kbd\",\n  \"keygen\",\n  \"label\",\n  \"legend\",\n  \"li\",\n  \"link\",\n  \"main\",\n  \"map\",\n  \"mark\",\n  \"menu\",\n  \"menuitem\",\n  \"meter\",\n  \"nav\",\n  \"noscript\",\n  \"object\",\n  \"ol\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"p\",\n  \"param\",\n  \"pre\",\n  \"progress\",\n  \"q\",\n  \"rb\",\n  \"rp\",\n  \"rt\",\n  \"rtc\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"section\",\n  \"select\",\n  \"small\",\n  \"source\",\n  \"span\",\n  \"strong\",\n  \"style\",\n  \"sub\",\n  \"summary\",\n  \"sup\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"template\",\n  \"textarea\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"time\",\n  \"title\",\n  \"tr\",\n  \"track\",\n  \"u\",\n  \"ul\",\n  \"var\",\n  \"video\",\n  \"wbr\",\n];\n","/**\n * MIT License\n *\n * Copyright (c) 2020 Engineering at FullStory\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n */\n\n/**\n * The following code is based on the FullStory Babel plugin, but has been modified to work\n * with Sentry products:\n *\n * - Added `sentry` to data properties, i.e `data-sentry-component`\n * - Converted to TypeScript\n * - Code cleanups\n */\n\nimport type * as Babel from \"@babel/core\";\nimport type { PluginObj, PluginPass } from \"@babel/core\";\n\nimport { DEFAULT_IGNORED_ELEMENTS, KNOWN_INCOMPATIBLE_PLUGINS } from \"./constants\";\n\nconst webComponentName = \"data-sentry-component\";\nconst webElementName = \"data-sentry-element\";\nconst webSourceFileName = \"data-sentry-source-file\";\n\nconst nativeComponentName = \"dataSentryComponent\";\nconst nativeElementName = \"dataSentryElement\";\nconst nativeSourceFileName = \"dataSentrySourceFile\";\n\ninterface AnnotationOpts {\n  native?: boolean;\n  \"annotate-fragments\"?: boolean;\n  ignoredComponents?: string[];\n}\n\ninterface FragmentContext {\n  fragmentAliases: Set<string>;\n  reactNamespaceAliases: Set<string>;\n}\n\ninterface AnnotationPluginPass extends PluginPass {\n  opts: AnnotationOpts;\n  sentryFragmentContext?: FragmentContext;\n}\n\ntype AnnotationPlugin = PluginObj<AnnotationPluginPass>;\n\n// Shared context object for all JSX processing functions\ninterface JSXProcessingContext {\n  /** Whether to annotate React fragments */\n  annotateFragments: boolean;\n  /** Babel types object */\n  t: typeof Babel.types;\n  /** Name of the React component */\n  componentName: string;\n  /** Source file name (optional) */\n  sourceFileName?: string;\n  /** Array of attribute names [component, element, sourceFile] */\n  attributeNames: string[];\n  /** Array of component names to ignore */\n  ignoredComponents: string[];\n  /** Fragment context for identifying React fragments */\n  fragmentContext?: FragmentContext;\n}\n\n// We must export the plugin as default, otherwise the Babel loader will not be able to resolve it when configured using its string identifier\nexport default function componentNameAnnotatePlugin({ types: t }: typeof Babel): AnnotationPlugin {\n  return {\n    visitor: {\n      Program: {\n        enter(path, state) {\n          const fragmentContext = collectFragmentContext(path);\n          state.sentryFragmentContext = fragmentContext;\n        },\n      },\n      FunctionDeclaration(path, state) {\n        if (!path.node.id || !path.node.id.name) {\n          return;\n        }\n        if (isKnownIncompatiblePluginFromState(state)) {\n          return;\n        }\n\n        const context = createJSXProcessingContext(state, t, path.node.id.name);\n        functionBodyPushAttributes(context, path);\n      },\n      ArrowFunctionExpression(path, state) {\n        // We're expecting a `VariableDeclarator` like `const MyComponent =`\n        const parent = path.parent;\n\n        if (\n          !parent ||\n          !(\"id\" in parent) ||\n          !parent.id ||\n          !(\"name\" in parent.id) ||\n          !parent.id.name\n        ) {\n          return;\n        }\n\n        if (isKnownIncompatiblePluginFromState(state)) {\n          return;\n        }\n\n        const context = createJSXProcessingContext(state, t, parent.id.name);\n        functionBodyPushAttributes(context, path);\n      },\n      ClassDeclaration(path, state) {\n        const name = path.get(\"id\");\n        const properties = path.get(\"body\").get(\"body\");\n        const render = properties.find((prop) => {\n          return prop.isClassMethod() && prop.get(\"key\").isIdentifier({ name: \"render\" });\n        });\n\n        if (!render || !render.traverse || isKnownIncompatiblePluginFromState(state)) {\n          return;\n        }\n\n        const context = createJSXProcessingContext(state, t, name.node?.name || \"\");\n\n        render.traverse({\n          ReturnStatement(returnStatement) {\n            const arg = returnStatement.get(\"argument\");\n\n            if (!arg.isJSXElement() && !arg.isJSXFragment()) {\n              return;\n            }\n\n            processJSX(context, arg);\n          },\n        });\n      },\n    },\n  };\n}\n\n/**\n * Creates a JSX processing context from the plugin state\n */\nfunction createJSXProcessingContext(\n  state: AnnotationPluginPass,\n  t: typeof Babel.types,\n  componentName: string\n): JSXProcessingContext {\n  return {\n    annotateFragments: state.opts[\"annotate-fragments\"] === true,\n    t,\n    componentName,\n    sourceFileName: sourceFileNameFromState(state),\n    attributeNames: attributeNamesFromState(state),\n    ignoredComponents: state.opts.ignoredComponents ?? [],\n    fragmentContext: state.sentryFragmentContext,\n  };\n}\n\n/**\n * Processes the body of a function to add Sentry tracking attributes to JSX elements.\n * Handles various function body structures including direct JSX returns, conditional expressions,\n * and nested JSX elements.\n */\nfunction functionBodyPushAttributes(\n  context: JSXProcessingContext,\n  path: Babel.NodePath<Babel.types.Function>\n): void {\n  let jsxNode: Babel.NodePath;\n\n  const functionBody = path.get(\"body\").get(\"body\");\n\n  if (\n    !(\"length\" in functionBody) &&\n    functionBody.parent &&\n    (functionBody.parent.type === \"JSXElement\" || functionBody.parent.type === \"JSXFragment\")\n  ) {\n    const maybeJsxNode = functionBody.find((c) => {\n      return c.type === \"JSXElement\" || c.type === \"JSXFragment\";\n    });\n\n    if (!maybeJsxNode) {\n      return;\n    }\n\n    jsxNode = maybeJsxNode;\n  } else {\n    const returnStatement = functionBody.find((c) => {\n      return c.type === \"ReturnStatement\";\n    });\n    if (!returnStatement) {\n      return;\n    }\n\n    const arg = returnStatement.get(\"argument\");\n    if (!arg) {\n      return;\n    }\n\n    if (Array.isArray(arg)) {\n      return;\n    }\n\n    // Handle the case of a function body returning a ternary operation.\n    // `return (maybeTrue ? '' : (<SubComponent />))`\n    if (arg.isConditionalExpression()) {\n      const consequent = arg.get(\"consequent\");\n      if (consequent.isJSXFragment() || consequent.isJSXElement()) {\n        processJSX(context, consequent);\n      }\n      const alternate = arg.get(\"alternate\");\n      if (alternate.isJSXFragment() || alternate.isJSXElement()) {\n        processJSX(context, alternate);\n      }\n      return;\n    }\n\n    if (!arg.isJSXFragment() && !arg.isJSXElement()) {\n      return;\n    }\n\n    jsxNode = arg;\n  }\n\n  if (!jsxNode) {\n    return;\n  }\n\n  processJSX(context, jsxNode);\n}\n\n/**\n * Recursively processes JSX elements to add Sentry tracking attributes.\n * Handles both JSX elements and fragments, applying appropriate attributes\n * based on configuration and component context.\n */\nfunction processJSX(\n  context: JSXProcessingContext,\n  jsxNode: Babel.NodePath,\n  componentName?: string\n): void {\n  if (!jsxNode) {\n    return;\n  }\n\n  // Use provided componentName or fall back to context componentName\n  const currentComponentName = componentName ?? context.componentName;\n\n  // NOTE: I don't know of a case where `openingElement` would have more than one item,\n  // but it's safer to always iterate\n  const paths = jsxNode.get(\"openingElement\");\n  const openingElements = Array.isArray(paths) ? paths : [paths];\n\n  openingElements.forEach((openingElement) => {\n    applyAttributes(\n      context,\n      openingElement as Babel.NodePath<Babel.types.JSXOpeningElement>,\n      currentComponentName\n    );\n  });\n\n  let children = jsxNode.get(\"children\");\n  // TODO: See why `Array.isArray` doesn't have correct behaviour here\n  if (children && !(\"length\" in children)) {\n    // A single child was found, maybe a bit of static text\n    children = [children];\n  }\n\n  let shouldSetComponentName = context.annotateFragments;\n\n  children.forEach((child) => {\n    // Happens for some node types like plain text\n    if (!child.node) {\n      return;\n    }\n\n    // Children don't receive the data-component attribute so we pass null for componentName unless it's the first child of a Fragment with a node and `annotateFragments` is true\n    const openingElement = child.get(\"openingElement\");\n    // TODO: Improve this. We never expect to have multiple opening elements\n    // but if it's possible, this should work\n    if (Array.isArray(openingElement)) {\n      return;\n    }\n\n    if (shouldSetComponentName && openingElement && openingElement.node) {\n      shouldSetComponentName = false;\n      processJSX(context, child, currentComponentName);\n    } else {\n      processJSX(context, child, \"\");\n    }\n  });\n}\n\n/**\n * Applies Sentry tracking attributes to a JSX opening element.\n * Adds component name, element name, and source file attributes while\n * respecting ignore lists and fragment detection.\n */\nfunction applyAttributes(\n  context: JSXProcessingContext,\n  openingElement: Babel.NodePath<Babel.types.JSXOpeningElement>,\n  componentName: string\n): void {\n  const { t, attributeNames, ignoredComponents, fragmentContext, sourceFileName } = context;\n  const [componentAttributeName, elementAttributeName, sourceFileAttributeName] = attributeNames;\n\n  // e.g., Raw JSX text like the `A` in `<h1>a</h1>`\n  if (!openingElement.node) {\n    return;\n  }\n\n  // Check if this is a React fragment - if so, skip attribute addition entirely\n  const isFragment = isReactFragment(t, openingElement, fragmentContext);\n  if (isFragment) {\n    return;\n  }\n\n  if (!openingElement.node.attributes) openingElement.node.attributes = [];\n  const elementName = getPathName(t, openingElement);\n\n  const isAnIgnoredComponent = ignoredComponents.some(\n    (ignoredComponent) => ignoredComponent === componentName || ignoredComponent === elementName\n  );\n\n  // Add a stable attribute for the element name but only for non-DOM names\n  let isAnIgnoredElement = false;\n  if (!isAnIgnoredComponent && !hasAttributeWithName(openingElement, elementAttributeName)) {\n    if (DEFAULT_IGNORED_ELEMENTS.includes(elementName)) {\n      isAnIgnoredElement = true;\n    } else {\n      // Always add element attribute for non-ignored elements\n      if (elementAttributeName) {\n        openingElement.node.attributes.push(\n          t.jSXAttribute(t.jSXIdentifier(elementAttributeName), t.stringLiteral(elementName))\n        );\n      }\n    }\n  }\n\n  // Add a stable attribute for the component name (absent for non-root elements)\n  if (\n    componentName &&\n    !isAnIgnoredComponent &&\n    !hasAttributeWithName(openingElement, componentAttributeName)\n  ) {\n    if (componentAttributeName) {\n      openingElement.node.attributes.push(\n        t.jSXAttribute(t.jSXIdentifier(componentAttributeName), t.stringLiteral(componentName))\n      );\n    }\n  }\n\n  // Add a stable attribute for the source file name\n  // Updated condition: add source file for elements that have either:\n  // 1. A component name (root elements), OR\n  // 2. An element name that's not ignored (child elements)\n  if (\n    sourceFileName &&\n    !isAnIgnoredComponent &&\n    (componentName || !isAnIgnoredElement) &&\n    !hasAttributeWithName(openingElement, sourceFileAttributeName)\n  ) {\n    if (sourceFileAttributeName) {\n      openingElement.node.attributes.push(\n        t.jSXAttribute(t.jSXIdentifier(sourceFileAttributeName), t.stringLiteral(sourceFileName))\n      );\n    }\n  }\n}\n\nfunction sourceFileNameFromState(state: AnnotationPluginPass): string | undefined {\n  const name = fullSourceFileNameFromState(state);\n  if (!name) {\n    return undefined;\n  }\n\n  if (name.indexOf(\"/\") !== -1) {\n    return name.split(\"/\").pop();\n  } else if (name.indexOf(\"\\\\\") !== -1) {\n    return name.split(\"\\\\\").pop();\n  } else {\n    return name;\n  }\n}\n\nfunction fullSourceFileNameFromState(state: AnnotationPluginPass): string | null {\n  // @ts-expect-error This type is incorrect in Babel, `sourceFileName` is the correct type\n  const name = state.file.opts.parserOpts?.sourceFileName as unknown;\n\n  if (typeof name === \"string\") {\n    return name;\n  }\n\n  return null;\n}\n\nfunction isKnownIncompatiblePluginFromState(state: AnnotationPluginPass): boolean {\n  const fullSourceFileName = fullSourceFileNameFromState(state);\n\n  if (!fullSourceFileName) {\n    return false;\n  }\n\n  return KNOWN_INCOMPATIBLE_PLUGINS.some((pluginName) => {\n    if (\n      fullSourceFileName.includes(`/node_modules/${pluginName}/`) ||\n      fullSourceFileName.includes(`\\\\node_modules\\\\${pluginName}\\\\`)\n    ) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nfunction attributeNamesFromState(state: AnnotationPluginPass): [string, string, string] {\n  if (state.opts.native) {\n    return [nativeComponentName, nativeElementName, nativeSourceFileName];\n  }\n\n  return [webComponentName, webElementName, webSourceFileName];\n}\n\nfunction collectFragmentContext(programPath: Babel.NodePath): FragmentContext {\n  const fragmentAliases = new Set<string>();\n  const reactNamespaceAliases = new Set<string>([\"React\"]); // Default React namespace\n\n  programPath.traverse({\n    ImportDeclaration(importPath) {\n      const source = importPath.node.source.value;\n\n      // Handle React imports\n      if (source === \"react\" || source === \"React\") {\n        importPath.node.specifiers.forEach((spec) => {\n          if (spec.type === \"ImportSpecifier\" && spec.imported.type === \"Identifier\") {\n            // Detect aliased React.Fragment imports (e.g., `Fragment as F`)\n            // so we can later identify <F> as a fragment in JSX.\n            if (spec.imported.name === \"Fragment\") {\n              fragmentAliases.add(spec.local.name);\n            }\n          } else if (\n            spec.type === \"ImportDefaultSpecifier\" ||\n            spec.type === \"ImportNamespaceSpecifier\"\n          ) {\n            // import React from 'react' -> React OR\n            // import * as React from 'react' -> React\n            reactNamespaceAliases.add(spec.local.name);\n          }\n        });\n      }\n    },\n\n    // Handle simple variable assignments only (avoid complex cases)\n    VariableDeclarator(varPath) {\n      if (varPath.node.init) {\n        const init = varPath.node.init;\n\n        // Handle identifier assignments: const MyFragment = Fragment\n        if (varPath.node.id.type === \"Identifier\") {\n          // Handle: const MyFragment = Fragment (only if Fragment is a known alias)\n          if (init.type === \"Identifier\" && fragmentAliases.has(init.name)) {\n            fragmentAliases.add(varPath.node.id.name);\n          }\n\n          // Handle: const MyFragment = React.Fragment (only for known React namespaces)\n          if (\n            init.type === \"MemberExpression\" &&\n            init.object.type === \"Identifier\" &&\n            init.property.type === \"Identifier\" &&\n            init.property.name === \"Fragment\" &&\n            reactNamespaceAliases.has(init.object.name)\n          ) {\n            fragmentAliases.add(varPath.node.id.name);\n          }\n        }\n\n        // Handle destructuring assignments: const { Fragment } = React\n        if (varPath.node.id.type === \"ObjectPattern\") {\n          if (init.type === \"Identifier\" && reactNamespaceAliases.has(init.name)) {\n            const properties = varPath.node.id.properties;\n\n            for (const prop of properties) {\n              if (\n                prop.type === \"ObjectProperty\" &&\n                prop.key &&\n                prop.key.type === \"Identifier\" &&\n                prop.value &&\n                prop.value.type === \"Identifier\" &&\n                prop.key.name === \"Fragment\"\n              ) {\n                fragmentAliases.add(prop.value.name);\n              }\n            }\n          }\n        }\n      }\n    },\n  });\n\n  return { fragmentAliases, reactNamespaceAliases };\n}\n\nfunction isReactFragment(\n  t: typeof Babel.types,\n  openingElement: Babel.NodePath,\n  context?: FragmentContext // Add this optional parameter\n): boolean {\n  // Handle JSX fragments (<>)\n  if (openingElement.isJSXFragment()) {\n    return true;\n  }\n\n  const elementName = getPathName(t, openingElement);\n\n  // Direct fragment references\n  if (elementName === \"Fragment\" || elementName === \"React.Fragment\") {\n    return true;\n  }\n\n  // TODO: All these objects are typed as unknown, maybe an oversight in Babel types?\n\n  // Check if the element name is a known fragment alias\n  if (context && elementName && context.fragmentAliases.has(elementName)) {\n    return true;\n  }\n\n  // Handle JSXMemberExpression\n  if (\n    openingElement.node &&\n    \"name\" in openingElement.node &&\n    openingElement.node.name &&\n    typeof openingElement.node.name === \"object\" &&\n    \"type\" in openingElement.node.name &&\n    openingElement.node.name.type === \"JSXMemberExpression\"\n  ) {\n    const nodeName = openingElement.node.name;\n    if (typeof nodeName !== \"object\" || !nodeName) {\n      return false;\n    }\n\n    if (\"object\" in nodeName && \"property\" in nodeName) {\n      const nodeNameObject = nodeName.object;\n      const nodeNameProperty = nodeName.property;\n\n      if (typeof nodeNameObject !== \"object\" || typeof nodeNameProperty !== \"object\") {\n        return false;\n      }\n\n      if (!nodeNameObject || !nodeNameProperty) {\n        return false;\n      }\n\n      const objectName = \"name\" in nodeNameObject && nodeNameObject.name;\n      const propertyName = \"name\" in nodeNameProperty && nodeNameProperty.name;\n\n      // React.Fragment check\n      if (objectName === \"React\" && propertyName === \"Fragment\") {\n        return true;\n      }\n\n      // Enhanced checks using context\n      if (context) {\n        // Check React.Fragment pattern with known React namespaces\n        if (\n          context.reactNamespaceAliases.has(objectName as string) &&\n          propertyName === \"Fragment\"\n        ) {\n          return true;\n        }\n\n        // Check MyFragment.Fragment pattern\n        if (context.fragmentAliases.has(objectName as string) && propertyName === \"Fragment\") {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction hasAttributeWithName(\n  openingElement: Babel.NodePath<Babel.types.JSXOpeningElement>,\n  name: string | undefined | null\n): boolean {\n  if (!name) {\n    return false;\n  }\n\n  return openingElement.node.attributes.some((node) => {\n    if (node.type === \"JSXAttribute\") {\n      return node.name.name === name;\n    }\n\n    return false;\n  });\n}\n\nfunction getPathName(t: typeof Babel.types, path: Babel.NodePath): string {\n  if (!path.node) return UNKNOWN_ELEMENT_NAME;\n  if (!(\"name\" in path.node)) {\n    return UNKNOWN_ELEMENT_NAME;\n  }\n\n  const name = path.node.name;\n\n  if (typeof name === \"string\") {\n    return name;\n  }\n\n  if (t.isIdentifier(name) || t.isJSXIdentifier(name)) {\n    return name.name;\n  }\n\n  if (t.isJSXNamespacedName(name)) {\n    return name.name.name;\n  }\n\n  // Handle JSX member expressions like Tab.Group\n  if (t.isJSXMemberExpression(name)) {\n    const objectName = getJSXMemberExpressionObjectName(t, name.object);\n    const propertyName = name.property.name;\n    return `${objectName}.${propertyName}`;\n  }\n\n  return UNKNOWN_ELEMENT_NAME;\n}\n\n// Recursively handle nested member expressions (e.g. Components.UI.Header)\nfunction getJSXMemberExpressionObjectName(\n  t: typeof Babel.types,\n  object: Babel.types.JSXMemberExpression | Babel.types.JSXIdentifier\n): string {\n  if (t.isJSXIdentifier(object)) {\n    return object.name;\n  }\n  if (t.isJSXMemberExpression(object)) {\n    const objectName = getJSXMemberExpressionObjectName(t, object.object);\n    return `${objectName}.${object.property.name}`;\n  }\n\n  return UNKNOWN_ELEMENT_NAME;\n}\n\nconst UNKNOWN_ELEMENT_NAME = \"unknown\";\n"],"names":["KNOWN_INCOMPATIBLE_PLUGINS","DEFAULT_IGNORED_ELEMENTS","webComponentName","webElementName","webSourceFileName","nativeComponentName","nativeElementName","nativeSourceFileName","componentNameAnnotatePlugin","_ref","t","types","visitor","Program","enter","path","state","fragmentContext","collectFragmentContext","sentryFragmentContext","FunctionDeclaration","node","id","name","isKnownIncompatiblePluginFromState","context","createJSXProcessingContext","functionBodyPushAttributes","ArrowFunctionExpression","parent","ClassDeclaration","_name$node","get","properties","render","find","prop","isClassMethod","isIdentifier","traverse","ReturnStatement","returnStatement","arg","isJSXElement","isJSXFragment","processJSX","componentName","_state$opts$ignoredCo","annotateFragments","opts","sourceFileName","sourceFileNameFromState","attributeNames","attributeNamesFromState","ignoredComponents","jsxNode","functionBody","type","maybeJsxNode","c","Array","isArray","isConditionalExpression","consequent","alternate","currentComponentName","paths","openingElements","forEach","openingElement","applyAttributes","children","shouldSetComponentName","child","_attributeNames","_slicedToArray","componentAttributeName","elementAttributeName","sourceFileAttributeName","isFragment","isReactFragment","attributes","elementName","getPathName","isAnIgnoredComponent","some","ignoredComponent","isAnIgnoredElement","hasAttributeWithName","includes","push","jSXAttribute","jSXIdentifier","stringLiteral","fullSourceFileNameFromState","undefined","indexOf","split","pop","_state$file$opts$pars","file","parserOpts","fullSourceFileName","pluginName","concat","programPath","fragmentAliases","Set","reactNamespaceAliases","ImportDeclaration","importPath","source","value","specifiers","spec","imported","add","local","VariableDeclarator","varPath","init","has","object","property","_iterator","_createForOfIteratorHelper","_step","s","n","done","key","err","e","f","_typeof","nodeName","nodeNameObject","nodeNameProperty","objectName","propertyName","UNKNOWN_ELEMENT_NAME","isJSXIdentifier","isJSXNamespacedName","isJSXMemberExpression","getJSXMemberExpressionObjectName"],"mappings":"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"}
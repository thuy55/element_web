{"version":3,"file":"Message.js","sources":["../../../src/components/Form/Message.tsx"],"sourcesContent":["/*\nCopyright 2023 New Vector Ltd.\n\nSPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { forwardRef, type PropsWithChildren } from \"react\";\nimport { Message } from \"@radix-ui/react-form\";\nimport CheckCircleSolidIcon from \"@vector-im/compound-design-tokens/assets/web/icons/check-circle-solid\";\nimport ErrorIcon from \"@vector-im/compound-design-tokens/assets/web/icons/error-solid\";\n\nimport styles from \"./form.module.css\";\nimport classNames from \"classnames\";\nimport { InlineSpinner } from \"../InlineSpinner\";\n\ntype MessageProps = {\n  /**\n   * The CSS class name.\n   */\n  className?: string;\n} & React.ComponentProps<typeof Message>;\n\n/**\n * An error message to display below a form control.\n */\nexport const ErrorMessage = forwardRef<\n  HTMLSpanElement,\n  PropsWithChildren<MessageProps>\n>(function ErrorMessage({ children, className, ...props }, ref) {\n  const classes = classNames(\n    styles.message,\n    styles[\"error-message\"],\n    className,\n  );\n  return (\n    <Message ref={ref} {...props} className={classes}>\n      <ErrorIcon />\n      {children}\n    </Message>\n  );\n});\n\n/**\n * A success message to display below a form control.\n */\nexport const SuccessMessage = forwardRef<\n  HTMLSpanElement,\n  PropsWithChildren<MessageProps>\n>(function SuccessMessage({ children, className, ...props }, ref) {\n  const classes = classNames(\n    styles.message,\n    styles[\"success-message\"],\n    className,\n  );\n  return (\n    <Message ref={ref} {...props} className={classes}>\n      <CheckCircleSolidIcon />\n      {children}\n    </Message>\n  );\n});\n\n/**\n * A message showing a loading state\n */\nexport const LoadingMessage = forwardRef<\n  HTMLSpanElement,\n  PropsWithChildren<MessageProps>\n>(function LoadingMessage({ children, className, ...props }, ref) {\n  const classes = classNames(styles.message, className);\n  return (\n    <Message ref={ref} {...props} className={classes}>\n      <InlineSpinner />\n      {children}\n    </Message>\n  );\n});\n\n/**\n * A help message to display below a form control.\n */\nexport const HelpMessage = forwardRef<\n  HTMLSpanElement,\n  PropsWithChildren<MessageProps>\n>(function HelpMessage({ children, className, ...props }, ref) {\n  const classes = classNames(styles.message, styles[\"help-message\"], className);\n  return (\n    <Message ref={ref} {...props} className={classes}>\n      {children}\n    </Message>\n  );\n});\n"],"names":["ErrorMessage","SuccessMessage","LoadingMessage","HelpMessage"],"mappings":";;;;;;;;AA0BO,MAAM,eAAe,WAG1B,SAASA,cAAa,EAAE,UAAU,WAAW,GAAG,MAAA,GAAS,KAAK;AAC9D,QAAM,UAAU;AAAA,IACd,OAAO;AAAA,IACP,OAAO,eAAe;AAAA,IACtB;AAAA,EAAA;AAEF,8BACG,SAAA,EAAQ,KAAW,GAAG,OAAO,WAAW,SACvC,UAAA;AAAA,IAAA,oBAAC,WAAA,EAAU;AAAA,IACV;AAAA,EAAA,GACH;AAEJ,CAAC;AAKM,MAAM,iBAAiB,WAG5B,SAASC,gBAAe,EAAE,UAAU,WAAW,GAAG,MAAA,GAAS,KAAK;AAChE,QAAM,UAAU;AAAA,IACd,OAAO;AAAA,IACP,OAAO,iBAAiB;AAAA,IACxB;AAAA,EAAA;AAEF,8BACG,SAAA,EAAQ,KAAW,GAAG,OAAO,WAAW,SACvC,UAAA;AAAA,IAAA,oBAAC,sBAAA,EAAqB;AAAA,IACrB;AAAA,EAAA,GACH;AAEJ,CAAC;AAKM,MAAM,iBAAiB,WAG5B,SAASC,gBAAe,EAAE,UAAU,WAAW,GAAG,MAAA,GAAS,KAAK;AAChE,QAAM,UAAU,WAAW,OAAO,SAAS,SAAS;AACpD,8BACG,SAAA,EAAQ,KAAW,GAAG,OAAO,WAAW,SACvC,UAAA;AAAA,IAAA,oBAAC,eAAA,EAAc;AAAA,IACd;AAAA,EAAA,GACH;AAEJ,CAAC;AAKM,MAAM,cAAc,WAGzB,SAASC,aAAY,EAAE,UAAU,WAAW,GAAG,MAAA,GAAS,KAAK;AAC7D,QAAM,UAAU,WAAW,OAAO,SAAS,OAAO,cAAc,GAAG,SAAS;AAC5E,6BACG,SAAA,EAAQ,KAAW,GAAG,OAAO,WAAW,SACtC,UACH;AAEJ,CAAC;"}
{"version":3,"file":"Password.js","sources":["../../../../../src/components/Form/Controls/Password/Password.tsx"],"sourcesContent":["/*\nCopyright 2023 New Vector Ltd.\n\nSPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-Element-Commercial\nPlease see LICENSE files in the repository root for full details.\n*/\nimport React, {\n  type ComponentRef,\n  forwardRef,\n  type ComponentProps,\n  useReducer,\n} from \"react\";\nimport { Control } from \"@radix-ui/react-form\";\n\nimport { ActionInput } from \"../Action\";\n\nimport VisibilityOn from \"@vector-im/compound-design-tokens/assets/web/icons/visibility-on\";\nimport VisibilityOff from \"@vector-im/compound-design-tokens/assets/web/icons/visibility-off\";\n\nconst showState = {\n  isHidden: true,\n  icon: VisibilityOff,\n  label: \"Show\",\n  type: \"password\",\n};\n\nconst hideState = {\n  isHidden: false,\n  icon: VisibilityOn,\n  label: \"Hide\",\n  type: \"text\",\n};\n\ntype Props = Omit<\n  ComponentProps<typeof ActionInput>,\n  \"type\" | \"actionLabel\" | \"onActionClick\" | \"Icon\"\n>;\n\n/**\n * A password input with a toggle to show/hide the password.\n *\n * Standalone input to be used outside of Radix forms.\n */\nexport const PasswordInput = forwardRef<\n  ComponentRef<typeof ActionInput>,\n  Props\n>(function PasswordControl(props, ref) {\n  const [{ icon, label, type }, togglePasswordVisibility] = useReducer(\n    (state) => (!state.isHidden ? showState : hideState),\n    showState,\n  );\n\n  return (\n    <ActionInput\n      ref={ref}\n      {...props}\n      Icon={icon}\n      // TODO: Replace with a function that deal with i18n of those values\n      actionLabel={label}\n      onActionClick={() => togglePasswordVisibility()}\n      type={type}\n    />\n  );\n});\n\n/**\n * A password input with a toggle to show/hide the password.\n *\n * Control to be used in a Radix form.\n */\nexport const PasswordControl = forwardRef<\n  ComponentRef<typeof PasswordInput>,\n  ComponentProps<typeof PasswordInput>\n>(function PasswordControl(props, ref) {\n  return (\n    <Control asChild>\n      <PasswordInput ref={ref} {...props} />\n    </Control>\n  );\n});\n"],"names":["PasswordControl"],"mappings":";;;;;;AAmBA,MAAM,YAAY;AAAA,EAChB,UAAU;AAAA,EACV,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AACR;AAEA,MAAM,YAAY;AAAA,EAChB,UAAU;AAAA,EACV,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AACR;AAYO,MAAM,gBAAgB,WAG3B,SAASA,iBAAgB,OAAO,KAAK;AACrC,QAAM,CAAC,EAAE,MAAM,OAAO,KAAA,GAAQ,wBAAwB,IAAI;AAAA,IACxD,CAAC,UAAW,CAAC,MAAM,WAAW,YAAY;AAAA,IAC1C;AAAA,EAAA;AAGF,SACE;AAAA,IAAC;AAAA,IAAA;AAAA,MACC;AAAA,MACC,GAAG;AAAA,MACJ,MAAM;AAAA,MAEN,aAAa;AAAA,MACb,eAAe,MAAM,yBAAA;AAAA,MACrB;AAAA,IAAA;AAAA,EAAA;AAGN,CAAC;AAOM,MAAM,kBAAkB,WAG7B,SAASA,iBAAgB,OAAO,KAAK;AACrC,SACE,oBAAC,WAAQ,SAAO,MACd,8BAAC,eAAA,EAAc,KAAW,GAAG,MAAA,CAAO,EAAA,CACtC;AAEJ,CAAC;"}
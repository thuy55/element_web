{"version":3,"file":"IWidgetApiErrorResponse.js","names":["isErrorResponse","responseData","error","_typeof","message"],"sources":["../../src/interfaces/IWidgetApiErrorResponse.ts"],"sourcesContent":["/*\n * Copyright 2020 - 2024 The Matrix.org Foundation C.I.C.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IWidgetApiResponse, IWidgetApiResponseData } from \"./IWidgetApiResponse\";\n\n/**\n * The format of errors returned by Matrix API requests\n * made by a WidgetDriver.\n */\nexport interface IMatrixApiError {\n    /** The HTTP status code of the associated request. */\n    http_status: number; // eslint-disable-line camelcase\n    /** Any HTTP response headers that are relevant to the error. */\n    http_headers: { [name: string]: string }; // eslint-disable-line camelcase\n    /** The URL of the failed request. */\n    url: string;\n    /** @see {@link https://spec.matrix.org/latest/client-server-api/#standard-error-response} */\n    response: {\n        errcode: string;\n        error: string;\n    } & IWidgetApiResponseData; // extensible\n}\n\nexport interface IWidgetApiErrorResponseDataDetails {\n    /** Set if the error came from a Matrix API request made by a widget driver */\n    matrix_api_error?: IMatrixApiError; // eslint-disable-line camelcase\n}\n\nexport interface IWidgetApiErrorResponseData extends IWidgetApiResponseData {\n    error: {\n        /** A user-friendly string describing the error */\n        message: string;\n    } & IWidgetApiErrorResponseDataDetails;\n}\n\nexport interface IWidgetApiErrorResponse extends IWidgetApiResponse {\n    response: IWidgetApiErrorResponseData;\n}\n\nexport function isErrorResponse(responseData: IWidgetApiResponseData): responseData is IWidgetApiErrorResponseData {\n    const error = responseData.error;\n    return typeof error === \"object\" && error !== null && \"message\" in error && typeof error.message === \"string\";\n}\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AA+BO,SAASA,eAAeA,CAACC,YAAoC,EAA+C;EAC/G,IAAMC,KAAK,GAAGD,YAAY,CAACC,KAAK;EAChC,OAAOC,OAAA,CAAOD,KAAK,MAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,IAAI,SAAS,IAAIA,KAAK,IAAI,OAAOA,KAAK,CAACE,OAAO,KAAK,QAAQ;AACjH"}
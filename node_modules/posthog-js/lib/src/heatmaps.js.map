{"version":3,"file":"heatmaps.js","sourceRoot":"","sources":["../../src/heatmaps.ts"],"names":[],"mappings":"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","sourcesContent":["import RageClick from './extensions/rageclick'\nimport { DeadClickCandidate, Properties, RemoteConfig } from './types'\nimport { PostHog } from './posthog-core'\n\nimport { document, window } from './utils/globals'\nimport { getEventTarget, getParentElement } from './autocapture-utils'\nimport { HEATMAPS_ENABLED_SERVER_SIDE } from './constants'\nimport { isNumber, isUndefined, isEmptyObject, isObject } from '@posthog/core'\nimport { createLogger } from './utils/logger'\nimport { isElementInToolbar, isElementNode, isTag } from './utils/element-utils'\nimport { DeadClicksAutocapture, isDeadClicksEnabledForHeatmaps } from './extensions/dead-clicks-autocapture'\nimport { includes } from '@posthog/core'\nimport { addEventListener, extendArray } from './utils'\nimport { maskQueryParams } from './utils/request-utils'\nimport { PERSONAL_DATA_CAMPAIGN_PARAMS, MASKED } from './utils/event-utils'\n\nconst DEFAULT_FLUSH_INTERVAL = 5000\n\nconst logger = createLogger('[Heatmaps]')\n\ntype HeatmapEventBuffer =\n    | {\n          [key: string]: Properties[]\n      }\n    | undefined\n\nfunction elementOrParentPositionMatches(el: Element | null, matches: string[], breakOnElement?: Element): boolean {\n    let curEl: Element | null | false = el\n\n    while (curEl && isElementNode(curEl) && !isTag(curEl, 'body')) {\n        if (curEl === breakOnElement) {\n            return false\n        }\n\n        if (includes(matches, window?.getComputedStyle(curEl).position)) {\n            return true\n        }\n\n        curEl = getParentElement(curEl)\n    }\n\n    return false\n}\n\nfunction isValidMouseEvent(e: unknown): e is MouseEvent {\n    return isObject(e) && 'clientX' in e && 'clientY' in e && isNumber(e.clientX) && isNumber(e.clientY)\n}\n\nexport class Heatmaps {\n    instance: PostHog\n    rageclicks = new RageClick()\n    _enabledServerSide: boolean = false\n    _initialized = false\n    _mouseMoveTimeout: ReturnType<typeof setTimeout> | undefined\n\n    // TODO: Periodically flush this if no other event has taken care of it\n    private _buffer: HeatmapEventBuffer\n    private _flushInterval: ReturnType<typeof setInterval> | null = null\n    private _deadClicksCapture: DeadClicksAutocapture | undefined\n\n    constructor(instance: PostHog) {\n        this.instance = instance\n        this._enabledServerSide = !!this.instance.persistence?.props[HEATMAPS_ENABLED_SERVER_SIDE]\n    }\n\n    public get flushIntervalMilliseconds(): number {\n        let flushInterval = DEFAULT_FLUSH_INTERVAL\n        if (\n            isObject(this.instance.config.capture_heatmaps) &&\n            this.instance.config.capture_heatmaps.flush_interval_milliseconds\n        ) {\n            flushInterval = this.instance.config.capture_heatmaps.flush_interval_milliseconds\n        }\n        return flushInterval\n    }\n\n    public get isEnabled(): boolean {\n        if (!isUndefined(this.instance.config.capture_heatmaps)) {\n            return this.instance.config.capture_heatmaps !== false\n        }\n        if (!isUndefined(this.instance.config.enable_heatmaps)) {\n            return this.instance.config.enable_heatmaps\n        }\n        return this._enabledServerSide\n    }\n\n    public startIfEnabled(): void {\n        if (this.isEnabled) {\n            // nested if here since we only want to run the else\n            // if this.enabled === false\n            // not if this method is called more than once\n            if (this._initialized) {\n                return\n            }\n            logger.info('starting...')\n            this._setupListeners()\n            this._flushInterval = setInterval(this._flush.bind(this), this.flushIntervalMilliseconds)\n        } else {\n            clearInterval(this._flushInterval ?? undefined)\n            this._deadClicksCapture?.stop()\n            this.getAndClearBuffer()\n        }\n    }\n\n    public onRemoteConfig(response: RemoteConfig) {\n        const optIn = !!response['heatmaps']\n\n        if (this.instance.persistence) {\n            this.instance.persistence.register({\n                [HEATMAPS_ENABLED_SERVER_SIDE]: optIn,\n            })\n        }\n        // store this in-memory in case persistence is disabled\n        this._enabledServerSide = optIn\n        this.startIfEnabled()\n    }\n\n    public getAndClearBuffer(): HeatmapEventBuffer {\n        const buffer = this._buffer\n        this._buffer = undefined\n        return buffer\n    }\n\n    private _onDeadClick(click: DeadClickCandidate): void {\n        this._onClick(click.originalEvent, 'deadclick')\n    }\n\n    private _setupListeners(): void {\n        if (!window || !document) {\n            return\n        }\n\n        addEventListener(window, 'beforeunload', this._flush.bind(this))\n\n        addEventListener(document, 'click', (e) => this._onClick((e || window?.event) as MouseEvent), { capture: true })\n        addEventListener(document, 'mousemove', (e) => this._onMouseMove((e || window?.event) as MouseEvent), {\n            capture: true,\n        })\n\n        this._deadClicksCapture = new DeadClicksAutocapture(\n            this.instance,\n            isDeadClicksEnabledForHeatmaps,\n            this._onDeadClick.bind(this)\n        )\n        this._deadClicksCapture.startIfEnabled()\n\n        this._initialized = true\n    }\n\n    private _getProperties(e: MouseEvent, type: string): Properties {\n        // We need to know if the target element is fixed or not\n        // If fixed then we won't account for scrolling\n        // If not then we will account for scrolling\n\n        const scrollY = this.instance.scrollManager.scrollY()\n        const scrollX = this.instance.scrollManager.scrollX()\n        const scrollElement = this.instance.scrollManager.scrollElement()\n\n        const isFixedOrSticky = elementOrParentPositionMatches(getEventTarget(e), ['fixed', 'sticky'], scrollElement)\n\n        return {\n            x: e.clientX + (isFixedOrSticky ? 0 : scrollX),\n            y: e.clientY + (isFixedOrSticky ? 0 : scrollY),\n            target_fixed: isFixedOrSticky,\n            type,\n        }\n    }\n\n    private _onClick(e: MouseEvent, type: string = 'click'): void {\n        if (isElementInToolbar(e.target) || !isValidMouseEvent(e)) {\n            return\n        }\n\n        const properties = this._getProperties(e, type)\n\n        if (this.rageclicks?.isRageClick(e.clientX, e.clientY, new Date().getTime())) {\n            this._capture({\n                ...properties,\n                type: 'rageclick',\n            })\n        }\n\n        this._capture(properties)\n    }\n\n    private _onMouseMove(e: Event): void {\n        if (isElementInToolbar(e.target) || !isValidMouseEvent(e)) {\n            return\n        }\n\n        clearTimeout(this._mouseMoveTimeout)\n\n        this._mouseMoveTimeout = setTimeout(() => {\n            this._capture(this._getProperties(e as MouseEvent, 'mousemove'))\n        }, 500)\n    }\n\n    private _capture(properties: Properties): void {\n        if (!window) {\n            return\n        }\n\n        const href = window.location.href\n\n        // mask url query params\n        const maskPersonalDataProperties = this.instance.config.mask_personal_data_properties\n        const customPersonalDataProperties = this.instance.config.custom_personal_data_properties\n\n        const paramsToMask = maskPersonalDataProperties\n            ? extendArray([], PERSONAL_DATA_CAMPAIGN_PARAMS, customPersonalDataProperties || [])\n            : []\n\n        const url = maskQueryParams(href, paramsToMask, MASKED)\n\n        this._buffer = this._buffer || {}\n\n        if (!this._buffer[url]) {\n            this._buffer[url] = []\n        }\n\n        this._buffer[url].push(properties)\n    }\n\n    private _flush(): void {\n        if (!this._buffer || isEmptyObject(this._buffer)) {\n            return\n        }\n\n        this.instance.capture('$$heatmap', {\n            $heatmap_data: this.getAndClearBuffer(),\n        })\n    }\n}\n"]}
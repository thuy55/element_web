{"version":3,"file":"external-integration.js","sourceRoot":"","sources":["../../../src/extensions/external-integration.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,4CAA0E;AAC1E,0CAA8C;AAE9C,IAAM,MAAM,GAAG,IAAA,qBAAY,EAAC,gCAAgC,CAAC,CAAA;AAE7D,IAAM,mBAAmB,GAA2D;IAChF,QAAQ,EAAE,sBAAsB;IAChC,SAAS,EAAE,wBAAwB;CACtC,CAAA;AAED;IACI,8BAA6B,SAAkB;QAAlB,cAAS,GAAT,SAAS,CAAS;IAAG,CAAC;IAE3C,0CAAW,GAAnB,UAAoB,IAA2B,EAAE,EAAc;;QAC3D,MAAA,MAAA,0BAAgB,CAAC,qBAAqB,0CAAE,sBAAsB,mDAAG,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,UAAC,GAAG;YACvF,IAAI,GAAG,EAAE,CAAC;gBACN,OAAO,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAA;YACrD,CAAC;YACD,EAAE,EAAE,CAAA;QACR,CAAC,CAAC,CAAA;IACN,CAAC;IAEM,mDAAoB,GAA3B;;QAAA,iBAeC;;gCAde,GAAG,EAAE,KAAK;YAClB,+DAA+D;YAC/D,IAAI,KAAK,IAAI,CAAC,CAAA,MAAA,MAAA,0BAAgB,CAAC,qBAAqB,0CAAE,YAAY,0CAAG,GAA8B,CAAC,CAAA,EAAE,CAAC;gBACnG,OAAK,WAAW,CAAC,mBAAmB,CAAC,GAA8B,CAAC,EAAE;;oBAClE,MAAA,MAAA,MAAA,0BAAgB,CAAC,qBAAqB,0CAAE,YAAY,0CAAG,GAA8B,CAAC,0CAAE,KAAK,CACzF,KAAI,CAAC,SAAS,CACjB,CAAA;gBACL,CAAC,CAAC,CAAA;YACN,CAAC;YACD,4DAA4D;YAC5D,IAAI,CAAC,KAAK,KAAI,MAAA,MAAA,0BAAgB,CAAC,qBAAqB,0CAAE,YAAY,0CAAG,GAA8B,CAAC,CAAA,EAAE,CAAC;gBACnG,MAAA,MAAA,MAAA,0BAAgB,CAAC,qBAAqB,0CAAE,YAAY,0CAAG,GAA8B,CAAC,0CAAE,IAAI,EAAE,CAAA;YAClG,CAAC;;;;YAZL,KAA2B,IAAA,KAAA,SAAA,MAAM,CAAC,OAAO,CAAC,MAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,mCAAI,EAAE,CAAC,CAAA,gBAAA;gBAAxE,IAAA,KAAA,mBAAY,EAAX,GAAG,QAAA,EAAE,KAAK,QAAA;wBAAV,GAAG,EAAE,KAAK;aAarB;;;;;;;;;IACL,CAAC;IACL,2BAAC;AAAD,CAAC,AA5BD,IA4BC;AA5BY,oDAAoB","sourcesContent":["import { PostHog } from '../posthog-core'\nimport { ExternalIntegrationKind } from '../types'\nimport { assignableWindow, ExternalExtensionKind } from '../utils/globals'\nimport { createLogger } from '../utils/logger'\n\nconst logger = createLogger('[PostHog ExternalIntegrations]')\n\nconst MAPPED_INTEGRATIONS: Record<ExternalIntegrationKind, ExternalExtensionKind> = {\n    intercom: 'intercom-integration',\n    crispChat: 'crisp-chat-integration',\n}\n\nexport class ExternalIntegrations {\n    constructor(private readonly _instance: PostHog) {}\n\n    private _loadScript(name: ExternalExtensionKind, cb: () => void): void {\n        assignableWindow.__PosthogExtensions__?.loadExternalDependency?.(this._instance, name, (err) => {\n            if (err) {\n                return logger.error('failed to load script', err)\n            }\n            cb()\n        })\n    }\n\n    public startIfEnabledOrStop() {\n        for (const [key, value] of Object.entries(this._instance.config.integrations ?? {})) {\n            // if the integration is enabled, and not present, then load it\n            if (value && !assignableWindow.__PosthogExtensions__?.integrations?.[key as ExternalIntegrationKind]) {\n                this._loadScript(MAPPED_INTEGRATIONS[key as ExternalIntegrationKind], () => {\n                    assignableWindow.__PosthogExtensions__?.integrations?.[key as ExternalIntegrationKind]?.start(\n                        this._instance\n                    )\n                })\n            }\n            // if the integration is disabled, and present, then stop it\n            if (!value && assignableWindow.__PosthogExtensions__?.integrations?.[key as ExternalIntegrationKind]) {\n                assignableWindow.__PosthogExtensions__?.integrations?.[key as ExternalIntegrationKind]?.stop()\n            }\n        }\n    }\n}\n"]}
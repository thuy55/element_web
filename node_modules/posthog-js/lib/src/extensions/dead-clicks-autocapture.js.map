{"version":3,"file":"dead-clicks-autocapture.js","sourceRoot":"","sources":["../../../src/extensions/dead-clicks-autocapture.ts"],"names":[],"mappings":"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","sourcesContent":["import { PostHog } from '../posthog-core'\nimport { DEAD_CLICKS_ENABLED_SERVER_SIDE } from '../constants'\nimport { isBoolean, isObject } from '@posthog/core'\nimport { assignableWindow, document, LazyLoadedDeadClicksAutocaptureInterface } from '../utils/globals'\nimport { createLogger } from '../utils/logger'\nimport { DeadClicksAutoCaptureConfig, RemoteConfig } from '../types'\n\nconst logger = createLogger('[Dead Clicks]')\n\nexport const isDeadClicksEnabledForHeatmaps = () => {\n    return true\n}\nexport const isDeadClicksEnabledForAutocapture = (instance: DeadClicksAutocapture) => {\n    const isRemoteEnabled = !!instance.instance.persistence?.get_property(DEAD_CLICKS_ENABLED_SERVER_SIDE)\n    const clientConfig = instance.instance.config.capture_dead_clicks\n    return isBoolean(clientConfig) ? clientConfig : isRemoteEnabled\n}\n\nexport class DeadClicksAutocapture {\n    get lazyLoadedDeadClicksAutocapture(): LazyLoadedDeadClicksAutocaptureInterface | undefined {\n        return this._lazyLoadedDeadClicksAutocapture\n    }\n\n    private _lazyLoadedDeadClicksAutocapture: LazyLoadedDeadClicksAutocaptureInterface | undefined\n\n    constructor(\n        readonly instance: PostHog,\n        readonly isEnabled: (dca: DeadClicksAutocapture) => boolean,\n        readonly onCapture?: DeadClicksAutoCaptureConfig['__onCapture']\n    ) {\n        this.startIfEnabled()\n    }\n\n    public onRemoteConfig(response: RemoteConfig) {\n        if (this.instance.persistence) {\n            this.instance.persistence.register({\n                [DEAD_CLICKS_ENABLED_SERVER_SIDE]: response?.captureDeadClicks,\n            })\n        }\n        this.startIfEnabled()\n    }\n\n    public startIfEnabled() {\n        if (this.isEnabled(this)) {\n            this._loadScript(() => {\n                this._start()\n            })\n        }\n    }\n\n    private _loadScript(cb: () => void): void {\n        if (assignableWindow.__PosthogExtensions__?.initDeadClicksAutocapture) {\n            // already loaded\n            cb()\n        }\n        assignableWindow.__PosthogExtensions__?.loadExternalDependency?.(\n            this.instance,\n            'dead-clicks-autocapture',\n            (err) => {\n                if (err) {\n                    logger.error('failed to load script', err)\n                    return\n                }\n                cb()\n            }\n        )\n    }\n\n    private _start() {\n        if (!document) {\n            logger.error('`document` not found. Cannot start.')\n            return\n        }\n\n        if (\n            !this._lazyLoadedDeadClicksAutocapture &&\n            assignableWindow.__PosthogExtensions__?.initDeadClicksAutocapture\n        ) {\n            const config = isObject(this.instance.config.capture_dead_clicks)\n                ? this.instance.config.capture_dead_clicks\n                : {}\n            config.__onCapture = this.onCapture\n\n            this._lazyLoadedDeadClicksAutocapture = assignableWindow.__PosthogExtensions__.initDeadClicksAutocapture(\n                this.instance,\n                config\n            )\n            this._lazyLoadedDeadClicksAutocapture.start(document)\n            logger.info(`starting...`)\n        }\n    }\n\n    stop() {\n        if (this._lazyLoadedDeadClicksAutocapture) {\n            this._lazyLoadedDeadClicksAutocapture.stop()\n            this._lazyLoadedDeadClicksAutocapture = undefined\n            logger.info(`stopping...`)\n        }\n    }\n}\n"]}
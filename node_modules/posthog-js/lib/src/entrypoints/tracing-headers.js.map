{"version":3,"file":"tracing-headers.js","sourceRoot":"","sources":["../../../src/entrypoints/tracing-headers.ts"],"names":[],"mappings":"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","sourcesContent":["import { SessionIdManager } from '../sessionid'\nimport { patch } from '../extensions/replay/rrweb-plugins/patch'\nimport { assignableWindow, window } from '../utils/globals'\nimport { COOKIELESS_SENTINEL_VALUE } from '../constants'\nimport { isArray } from '@posthog/core'\n\nconst addTracingHeaders = (\n    hostnames: string[],\n    distinctId: string,\n    sessionManager: SessionIdManager | undefined,\n    req: Request\n) => {\n    let reqHostname: string\n    try {\n        // we don't need to support IE11 here\n        // eslint-disable-next-line compat/compat\n        reqHostname = new URL(req.url).hostname\n    } catch {\n        // If the URL is invalid, we skip adding tracing headers\n        return\n    }\n    if (isArray(hostnames) && !hostnames.includes(reqHostname)) {\n        // Skip if the hostname is not in the list (also skip if hostnames is not an array,\n        // because in the earliest version of this __add_tracing_headers was a bool)\n        return\n    }\n\n    if (sessionManager) {\n        const { sessionId, windowId } = sessionManager.checkAndGetSessionAndWindowId(true)\n        req.headers.set('X-POSTHOG-SESSION-ID', sessionId)\n        req.headers.set('X-POSTHOG-WINDOW-ID', windowId)\n    }\n    if (distinctId !== COOKIELESS_SENTINEL_VALUE) {\n        req.headers.set('X-POSTHOG-DISTINCT-ID', distinctId)\n    }\n}\n\nconst patchFetch = (hostnames: string[], distinctId: string, sessionManager?: SessionIdManager): (() => void) => {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return patch(window, 'fetch', (originalFetch: typeof fetch) => {\n        return async function (url: URL | RequestInfo, init?: RequestInit | undefined) {\n            // check IE earlier than this, we only initialize if Request is present\n            // eslint-disable-next-line compat/compat\n            const req = new Request(url, init)\n\n            addTracingHeaders(hostnames, distinctId, sessionManager, req)\n\n            return originalFetch(req)\n        }\n    })\n}\n\nconst patchXHR = (hostnames: string[], distinctId: string, sessionManager?: SessionIdManager): (() => void) => {\n    return patch(\n        // we can assert this is present because we've checked previously\n        window!.XMLHttpRequest.prototype,\n        'open',\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        (originalOpen: typeof XMLHttpRequest.prototype.open) => {\n            return function (\n                method: string,\n                url: string | URL,\n                async = true,\n                username?: string | null,\n                password?: string | null\n            ) {\n                // because this function is returned in its actual context `this` _is_ an XMLHttpRequest\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                const xhr = this as XMLHttpRequest\n\n                // check IE earlier than this, we only initialize if Request is present\n                // eslint-disable-next-line compat/compat\n                const req = new Request(url)\n\n                addTracingHeaders(hostnames, distinctId, sessionManager, req)\n\n                return originalOpen.call(xhr, method, req.url, async, username, password)\n            }\n        }\n    )\n}\n\nassignableWindow.__PosthogExtensions__ = assignableWindow.__PosthogExtensions__ || {}\nconst patchFns = {\n    _patchFetch: patchFetch,\n    _patchXHR: patchXHR,\n}\nassignableWindow.__PosthogExtensions__.tracingHeadersPatchFns = patchFns\n\n// we used to put tracingHeadersPatchFns on window, and now we put it on __PosthogExtensions__\n// but that means that old clients which lazily load this extension are looking in the wrong place\n// yuck,\n// so we also put it directly on the window\n// when 1.161.1 is the oldest version seen in production we can remove this\nassignableWindow.postHogTracingHeadersPatchFns = patchFns\n\nexport default patchFns\n"]}
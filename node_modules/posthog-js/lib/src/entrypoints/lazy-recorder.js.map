{"version":3,"file":"lazy-recorder.js","sourceRoot":"","sources":["../../../src/entrypoints/lazy-recorder.ts"],"names":[],"mappings":";AAAA,qHAAqH;AACrH,+FAA+F;AAC/F,mFAAmF;;;;;;;;;;;;;;;;AAEnF,4CAAmD;AACnD,2GAAuG;AAEvG,0BAAgB,CAAC,qBAAqB,GAAG,0BAAgB,CAAC,qBAAqB,IAAI,EAAE,CAAA;AACrF,0BAAgB,CAAC,qBAAqB,CAAC,oBAAoB,GAAG,UAAC,EAAE,IAAK,OAAA,IAAI,yDAA0B,CAAC,EAAE,CAAC,EAAlC,CAAkC,CAAA;AAExG,6CAA0B","sourcesContent":["// This is only here for so that users with cached recorder.ts don't get errors during the transition to lazy loading\n// if you have the new eager loaded recording code it will request this file, not `recorder.js`\n// so you don't have the problem that clients get new code and a cached recorder.js\n\nimport { assignableWindow } from '../utils/globals'\nimport { LazyLoadedSessionRecording } from '../extensions/replay/external/lazy-loaded-session-recorder'\n\nassignableWindow.__PosthogExtensions__ = assignableWindow.__PosthogExtensions__ || {}\nassignableWindow.__PosthogExtensions__.initSessionRecording = (ph) => new LazyLoadedSessionRecording(ph)\n\nexport * from './recorder'\n"]}
{"version":3,"file":"survey-utils.js","sourceRoot":"","sources":["../../../src/utils/survey-utils.ts"],"names":[],"mappings":";;;AAKA,0CAEC;AAED,8DAEC;AAED,gEAEC;AAfD,kEAAsG;AACtG,0CAA8C;AAEjC,QAAA,aAAa,GAAG,IAAA,qBAAY,EAAC,WAAW,CAAC,CAAA;AAEtD,SAAgB,eAAe,CAAC,MAAc;IAC1C,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;AACpD,CAAC;AAED,SAAgB,yBAAyB,CAAC,MAAkC;;IACxE,OAAO,CAAC,CAAC,CAAA,MAAA,MAAA,MAAA,MAAM,CAAC,UAAU,0CAAE,MAAM,0CAAE,MAAM,0CAAE,MAAM,CAAA,CAAA;AACtD,CAAC;AAED,SAAgB,0BAA0B,CAAC,MAAkC;;IACzE,OAAO,CAAC,CAAC,CAAA,MAAA,MAAA,MAAA,MAAM,CAAC,UAAU,0CAAE,OAAO,0CAAE,MAAM,0CAAE,MAAM,CAAA,CAAA;AACvD,CAAC;AAEY,QAAA,kBAAkB,GAAG,aAAa,CAAA;AAClC,QAAA,yBAAyB,GAAG,mBAAmB,CAAA;AAErD,IAAM,4BAA4B,GAAG,UACxC,MAAgD,EAChD,MAAiC;IAEjC,IAAI,cAAc,GAAG,kBAAW,MAAM,cAAI,MAAM,CAAC,EAAE,CAAE,CAAA;IACrD,IAAI,MAAM,CAAC,iBAAiB,IAAI,MAAM,CAAC,iBAAiB,GAAG,CAAC,EAAE,CAAC;QAC3D,cAAc,GAAG,kBAAW,MAAM,cAAI,MAAM,CAAC,EAAE,cAAI,MAAM,CAAC,iBAAiB,CAAE,CAAA;IACjF,CAAC;IAED,OAAO,cAAc,CAAA;AACzB,CAAC,CAAA;AAVY,QAAA,4BAA4B,gCAUxC;AAEM,IAAM,gBAAgB,GAAG,UAAC,MAAgD;IAC7E,IAAI,aAAa,GAAG,UAAG,0BAAkB,SAAG,MAAM,CAAC,EAAE,CAAE,CAAA;IACvD,IAAI,MAAM,CAAC,iBAAiB,IAAI,MAAM,CAAC,iBAAiB,GAAG,CAAC,EAAE,CAAC;QAC3D,aAAa,GAAG,UAAG,0BAAkB,SAAG,MAAM,CAAC,EAAE,cAAI,MAAM,CAAC,iBAAiB,CAAE,CAAA;IACnF,CAAC;IAED,OAAO,aAAa,CAAA;AACxB,CAAC,CAAA;AAPY,QAAA,gBAAgB,oBAO5B;AAEM,IAAM,2BAA2B,GAAG,UAAC,MAAgD;IACxF,IAAM,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAA,wBAAgB,EAAC,MAAM,CAAC,CAAC,CAAA;IACnE,qDAAqD;IACrD,IAAI,YAAY,EAAE,CAAC;QACf,OAAM;IACV,CAAC;IAED,YAAY,CAAC,OAAO,CAAC,IAAA,wBAAgB,EAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAA;AAC1D,CAAC,CAAA;AARY,QAAA,2BAA2B,+BAQvC;AAED,uFAAuF;AACvF,kGAAkG;AACrF,QAAA,mBAAmB,GAAG,CAAC,kCAAU,CAAC,OAAO,EAAE,kCAAU,CAAC,MAAM,EAAE,kCAAU,CAAC,GAAG,CAAC,CAAA;AAE7E,QAAA,8BAA8B,GAAyB;IAChE,gBAAgB,EAAE,KAAK;IACvB,WAAW,EAAE,KAAK;IAClB,WAAW,EAAE,yCAAiB,CAAC,OAAO;CACzC,CAAA","sourcesContent":["import { DisplaySurveyOptions, DisplaySurveyType, Survey, SurveyType } from '../posthog-surveys-types'\nimport { createLogger } from '../utils/logger'\n\nexport const SURVEY_LOGGER = createLogger('[Surveys]')\n\nexport function isSurveyRunning(survey: Survey): boolean {\n    return !!(survey.start_date && !survey.end_date)\n}\n\nexport function doesSurveyActivateByEvent(survey: Pick<Survey, 'conditions'>): boolean {\n    return !!survey.conditions?.events?.values?.length\n}\n\nexport function doesSurveyActivateByAction(survey: Pick<Survey, 'conditions'>): boolean {\n    return !!survey.conditions?.actions?.values?.length\n}\n\nexport const SURVEY_SEEN_PREFIX = 'seenSurvey_'\nexport const SURVEY_IN_PROGRESS_PREFIX = 'inProgressSurvey_'\n\nexport const getSurveyInteractionProperty = (\n    survey: Pick<Survey, 'id' | 'current_iteration'>,\n    action: 'responded' | 'dismissed'\n): string => {\n    let surveyProperty = `$survey_${action}/${survey.id}`\n    if (survey.current_iteration && survey.current_iteration > 0) {\n        surveyProperty = `$survey_${action}/${survey.id}/${survey.current_iteration}`\n    }\n\n    return surveyProperty\n}\n\nexport const getSurveySeenKey = (survey: Pick<Survey, 'id' | 'current_iteration'>): string => {\n    let surveySeenKey = `${SURVEY_SEEN_PREFIX}${survey.id}`\n    if (survey.current_iteration && survey.current_iteration > 0) {\n        surveySeenKey = `${SURVEY_SEEN_PREFIX}${survey.id}_${survey.current_iteration}`\n    }\n\n    return surveySeenKey\n}\n\nexport const setSurveySeenOnLocalStorage = (survey: Pick<Survey, 'id' | 'current_iteration'>) => {\n    const isSurveySeen = localStorage.getItem(getSurveySeenKey(survey))\n    // if survey is already seen, no need to set it again\n    if (isSurveySeen) {\n        return\n    }\n\n    localStorage.setItem(getSurveySeenKey(survey), 'true')\n}\n\n// These surveys are relevant for the getActiveMatchingSurveys method. They are used to\n// display surveys in our customer's application. Any new in-app survey type should be added here.\nexport const IN_APP_SURVEY_TYPES = [SurveyType.Popover, SurveyType.Widget, SurveyType.API]\n\nexport const DEFAULT_DISPLAY_SURVEY_OPTIONS: DisplaySurveyOptions = {\n    ignoreConditions: false,\n    ignoreDelay: false,\n    displayType: DisplaySurveyType.Popover,\n}\n"]}